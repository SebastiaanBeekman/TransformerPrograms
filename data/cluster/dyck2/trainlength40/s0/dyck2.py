import numpy as np
import pandas as pd


def select_closest(keys, queries, predicate):
    scores = [[False for _ in keys] for _ in queries]
    for i, q in enumerate(queries):
        matches = [j for j, k in enumerate(keys[: i + 1]) if predicate(q, k)]
        if not (any(matches)):
            scores[i][0] = True
        else:
            j = min(matches, key=lambda j: len(matches) if j == i else abs(i - j))
            scores[i][j] = True
    return scores


def select(keys, queries, predicate):
    return [[predicate(q, k) for k in keys[: i + 1]] for i, q in enumerate(queries)]


def aggregate(attention, values):
    return [[v for a, v in zip(attn, values) if a][0] for attn in attention]


def aggregate_sum(attention, values):
    return [sum([v for a, v in zip(attn, values) if a]) for attn in attention]


def run(tokens):

    # classifier weights ##########################################
    classifier_weights = pd.read_csv(
        "output/length/rasp/dyck2/trainlength40/s0/dyck2_weights.csv",
        index_col=[0, 1],
        dtype={"feature": str},
    )
    # inputs #####################################################
    token_scores = classifier_weights.loc[[("tokens", str(v)) for v in tokens]]

    positions = list(range(len(tokens)))
    position_scores = classifier_weights.loc[[("positions", str(v)) for v in positions]]

    ones = [1 for _ in range(len(tokens))]
    one_scores = classifier_weights.loc[[("ones", "_") for v in ones]].mul(ones, axis=0)

    # attn_0_0 ####################################################
    def predicate_0_0(position, token):
        if position in {
            0,
            11,
            13,
            17,
            18,
            19,
            22,
            24,
            25,
            26,
            27,
            28,
            30,
            31,
            33,
            34,
            35,
            37,
            40,
            41,
            43,
            44,
            45,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            55,
            58,
            60,
            62,
            63,
            64,
            65,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
        }:
            return token == ""
        elif position in {1, 3, 5, 6, 8, 46, 16}:
            return token == "}"
        elif position in {2, 4, 7, 9, 14, 15, 54, 56}:
            return token == ")"
        elif position in {10, 20}:
            return token == "{"
        elif position in {32, 66, 36, 38, 39, 42, 12, 61, 21, 23, 57, 59, 29}:
            return token == "("

    attn_0_0_pattern = select_closest(tokens, positions, predicate_0_0)
    attn_0_0_outputs = aggregate(attn_0_0_pattern, tokens)
    attn_0_0_output_scores = classifier_weights.loc[
        [("attn_0_0_outputs", str(v)) for v in attn_0_0_outputs]
    ]

    # attn_0_1 ####################################################
    def predicate_0_1(q_position, k_position):
        if q_position in {
            0,
            68,
            70,
            8,
            9,
            42,
            41,
            43,
            44,
            45,
            47,
            48,
            73,
            76,
            54,
            57,
            59,
        }:
            return k_position == 6
        elif q_position in {1}:
            return k_position == 1
        elif q_position in {2}:
            return k_position == 39
        elif q_position in {3}:
            return k_position == 2
        elif q_position in {4, 52}:
            return k_position == 3
        elif q_position in {5}:
            return k_position == 4
        elif q_position in {6, 7}:
            return k_position == 5
        elif q_position in {16, 10, 14, 15}:
            return k_position == 9
        elif q_position in {67, 11, 12, 13, 53}:
            return k_position == 8
        elif q_position in {17, 19, 20}:
            return k_position == 15
        elif q_position in {18, 23}:
            return k_position == 16
        elif q_position in {21}:
            return k_position == 18
        elif q_position in {22}:
            return k_position == 21
        elif q_position in {24}:
            return k_position == 22
        elif q_position in {25}:
            return k_position == 23
        elif q_position in {26}:
            return k_position == 25
        elif q_position in {27, 28}:
            return k_position == 26
        elif q_position in {29}:
            return k_position == 27
        elif q_position in {30, 31}:
            return k_position == 29
        elif q_position in {32, 33}:
            return k_position == 30
        elif q_position in {34}:
            return k_position == 33
        elif q_position in {35}:
            return k_position == 34
        elif q_position in {36}:
            return k_position == 11
        elif q_position in {37}:
            return k_position == 36
        elif q_position in {38, 39}:
            return k_position == 37
        elif q_position in {
            40,
            46,
            49,
            50,
            51,
            55,
            56,
            58,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            69,
            71,
            72,
            74,
            75,
            77,
            78,
            79,
        }:
            return k_position == 7

    attn_0_1_pattern = select_closest(positions, positions, predicate_0_1)
    attn_0_1_outputs = aggregate(attn_0_1_pattern, tokens)
    attn_0_1_output_scores = classifier_weights.loc[
        [("attn_0_1_outputs", str(v)) for v in attn_0_1_outputs]
    ]

    # attn_0_2 ####################################################
    def predicate_0_2(q_token, k_token):
        if q_token in {"(", ")"}:
            return k_token == ")"
        elif q_token in {"<s>"}:
            return k_token == "<s>"
        elif q_token in {"{", "}"}:
            return k_token == "}"

    attn_0_2_pattern = select_closest(tokens, tokens, predicate_0_2)
    attn_0_2_outputs = aggregate(attn_0_2_pattern, tokens)
    attn_0_2_output_scores = classifier_weights.loc[
        [("attn_0_2_outputs", str(v)) for v in attn_0_2_outputs]
    ]

    # attn_0_3 ####################################################
    def predicate_0_3(q_position, k_position):
        if q_position in {
            0,
            7,
            40,
            41,
            42,
            44,
            45,
            49,
            50,
            51,
            54,
            55,
            56,
            57,
            58,
            59,
            62,
            64,
            65,
            66,
            70,
            71,
            72,
            74,
            76,
            79,
        }:
            return k_position == 6
        elif q_position in {1}:
            return k_position == 54
        elif q_position in {2}:
            return k_position == 1
        elif q_position in {3}:
            return k_position == 2
        elif q_position in {4}:
            return k_position == 3
        elif q_position in {5}:
            return k_position == 4
        elif q_position in {67, 68, 69, 6, 73, 43, 77, 46, 47, 48, 52, 53, 60, 61}:
            return k_position == 5
        elif q_position in {8, 9, 75, 78, 63}:
            return k_position == 7
        elif q_position in {10}:
            return k_position == 8
        elif q_position in {16, 11, 12, 13}:
            return k_position == 9
        elif q_position in {14, 15}:
            return k_position == 10
        elif q_position in {17, 19, 21}:
            return k_position == 16
        elif q_position in {18}:
            return k_position == 17
        elif q_position in {20, 23}:
            return k_position == 15
        elif q_position in {22}:
            return k_position == 21
        elif q_position in {24}:
            return k_position == 23
        elif q_position in {25}:
            return k_position == 24
        elif q_position in {26}:
            return k_position == 25
        elif q_position in {27}:
            return k_position == 26
        elif q_position in {28}:
            return k_position == 27
        elif q_position in {29}:
            return k_position == 28
        elif q_position in {30}:
            return k_position == 29
        elif q_position in {33, 31}:
            return k_position == 30
        elif q_position in {32}:
            return k_position == 31
        elif q_position in {34}:
            return k_position == 33
        elif q_position in {35}:
            return k_position == 32
        elif q_position in {36}:
            return k_position == 35
        elif q_position in {37}:
            return k_position == 36
        elif q_position in {38}:
            return k_position == 37
        elif q_position in {39}:
            return k_position == 38

    attn_0_3_pattern = select_closest(positions, positions, predicate_0_3)
    attn_0_3_outputs = aggregate(attn_0_3_pattern, tokens)
    attn_0_3_output_scores = classifier_weights.loc[
        [("attn_0_3_outputs", str(v)) for v in attn_0_3_outputs]
    ]

    # num_attn_0_0 ####################################################
    def num_predicate_0_0(token, position):
        if token in {"(", "{"}:
            return position == 9
        elif token in {")"}:
            return position == 64
        elif token in {"<s>"}:
            return position == 25
        elif token in {"}"}:
            return position == 45

    num_attn_0_0_pattern = select(positions, tokens, num_predicate_0_0)
    num_attn_0_0_outputs = aggregate_sum(num_attn_0_0_pattern, ones)
    num_attn_0_0_output_scores = classifier_weights.loc[
        [("num_attn_0_0_outputs", "_") for v in num_attn_0_0_outputs]
    ].mul(num_attn_0_0_outputs, axis=0)

    # num_attn_0_1 ####################################################
    def num_predicate_0_1(q_position, k_position):
        if q_position in {0, 48}:
            return k_position == 25
        elif q_position in {40, 1, 20, 79}:
            return k_position == 76
        elif q_position in {2, 50, 52}:
            return k_position == 17
        elif q_position in {3}:
            return k_position == 10
        elif q_position in {9, 4, 55}:
            return k_position == 47
        elif q_position in {5}:
            return k_position == 71
        elif q_position in {32, 6}:
            return k_position == 42
        elif q_position in {18, 7}:
            return k_position == 66
        elif q_position in {8, 30}:
            return k_position == 64
        elif q_position in {64, 17, 10}:
            return k_position == 61
        elif q_position in {11}:
            return k_position == 43
        elif q_position in {65, 12, 69}:
            return k_position == 20
        elif q_position in {34, 35, 13}:
            return k_position == 59
        elif q_position in {14}:
            return k_position == 52
        elif q_position in {15}:
            return k_position == 24
        elif q_position in {16, 75}:
            return k_position == 44
        elif q_position in {19}:
            return k_position == 27
        elif q_position in {21}:
            return k_position == 69
        elif q_position in {24, 67, 22}:
            return k_position == 41
        elif q_position in {23}:
            return k_position == 0
        elif q_position in {25, 38}:
            return k_position == 79
        elif q_position in {26}:
            return k_position == 75
        elif q_position in {27}:
            return k_position == 58
        elif q_position in {28}:
            return k_position == 70
        elif q_position in {37, 29}:
            return k_position == 50
        elif q_position in {31}:
            return k_position == 54
        elif q_position in {33}:
            return k_position == 77
        elif q_position in {36}:
            return k_position == 46
        elif q_position in {42, 76, 61, 39}:
            return k_position == 63
        elif q_position in {41, 66}:
            return k_position == 13
        elif q_position in {43}:
            return k_position == 72
        elif q_position in {44}:
            return k_position == 9
        elif q_position in {45}:
            return k_position == 1
        elif q_position in {46}:
            return k_position == 28
        elif q_position in {78, 47}:
            return k_position == 15
        elif q_position in {49, 60}:
            return k_position == 40
        elif q_position in {51}:
            return k_position == 57
        elif q_position in {53}:
            return k_position == 74
        elif q_position in {77, 54}:
            return k_position == 19
        elif q_position in {56}:
            return k_position == 4
        elif q_position in {57, 58, 68}:
            return k_position == 14
        elif q_position in {59}:
            return k_position == 21
        elif q_position in {62}:
            return k_position == 39
        elif q_position in {63}:
            return k_position == 22
        elif q_position in {70}:
            return k_position == 62
        elif q_position in {71}:
            return k_position == 68
        elif q_position in {72}:
            return k_position == 53
        elif q_position in {73}:
            return k_position == 51
        elif q_position in {74}:
            return k_position == 73

    num_attn_0_1_pattern = select(positions, positions, num_predicate_0_1)
    num_attn_0_1_outputs = aggregate_sum(num_attn_0_1_pattern, ones)
    num_attn_0_1_output_scores = classifier_weights.loc[
        [("num_attn_0_1_outputs", "_") for v in num_attn_0_1_outputs]
    ].mul(num_attn_0_1_outputs, axis=0)

    # num_attn_0_2 ####################################################
    def num_predicate_0_2(token, position):
        if token in {"("}:
            return position == 63
        elif token in {")"}:
            return position == 9
        elif token in {"<s>"}:
            return position == 48
        elif token in {"{"}:
            return position == 67
        elif token in {"}"}:
            return position == 15

    num_attn_0_2_pattern = select(positions, tokens, num_predicate_0_2)
    num_attn_0_2_outputs = aggregate_sum(num_attn_0_2_pattern, ones)
    num_attn_0_2_output_scores = classifier_weights.loc[
        [("num_attn_0_2_outputs", "_") for v in num_attn_0_2_outputs]
    ].mul(num_attn_0_2_outputs, axis=0)

    # num_attn_0_3 ####################################################
    def num_predicate_0_3(token, position):
        if token in {"("}:
            return position == 52
        elif token in {")"}:
            return position == 17
        elif token in {"<s>"}:
            return position == 9
        elif token in {"{"}:
            return position == 49
        elif token in {"}"}:
            return position == 16

    num_attn_0_3_pattern = select(positions, tokens, num_predicate_0_3)
    num_attn_0_3_outputs = aggregate_sum(num_attn_0_3_pattern, ones)
    num_attn_0_3_output_scores = classifier_weights.loc[
        [("num_attn_0_3_outputs", "_") for v in num_attn_0_3_outputs]
    ].mul(num_attn_0_3_outputs, axis=0)

    # mlp_0_0 #####################################################
    def mlp_0_0(attn_0_3_output, attn_0_1_output):
        key = (attn_0_3_output, attn_0_1_output)
        if key in {("(", ")"), (")", "<s>"), ("{", "<s>"), ("}", "("), ("}", "<s>")}:
            return 54
        elif key in {
            (")", "("),
            (")", ")"),
            (")", "}"),
            ("{", ")"),
            ("{", "}"),
            ("}", ")"),
            ("}", "{"),
            ("}", "}"),
        }:
            return 5
        elif key in {("(", "("), ("(", "<s>"), ("(", "{"), ("{", "{")}:
            return 75
        elif key in {
            ("<s>", "("),
            ("<s>", ")"),
            ("<s>", "<s>"),
            ("<s>", "{"),
            ("<s>", "}"),
        }:
            return 0
        elif key in {(")", "{")}:
            return 49
        return 25

    mlp_0_0_outputs = [
        mlp_0_0(k0, k1) for k0, k1 in zip(attn_0_3_outputs, attn_0_1_outputs)
    ]
    mlp_0_0_output_scores = classifier_weights.loc[
        [("mlp_0_0_outputs", str(v)) for v in mlp_0_0_outputs]
    ]

    # mlp_0_1 #####################################################
    def mlp_0_1(attn_0_0_output, attn_0_2_output):
        key = (attn_0_0_output, attn_0_2_output)
        if key in {
            ("(", "}"),
            (")", ")"),
            (")", "}"),
            ("<s>", "}"),
            ("{", "}"),
            ("}", "("),
            ("}", ")"),
            ("}", "<s>"),
            ("}", "{"),
            ("}", "}"),
        }:
            return 57
        elif key in {("<s>", "("), ("<s>", "<s>"), ("<s>", "{")}:
            return 1
        elif key in {("(", ")"), ("<s>", ")"), ("{", ")")}:
            return 5
        return 52

    mlp_0_1_outputs = [
        mlp_0_1(k0, k1) for k0, k1 in zip(attn_0_0_outputs, attn_0_2_outputs)
    ]
    mlp_0_1_output_scores = classifier_weights.loc[
        [("mlp_0_1_outputs", str(v)) for v in mlp_0_1_outputs]
    ]

    # mlp_0_2 #####################################################
    def mlp_0_2(attn_0_1_output, position):
        key = (attn_0_1_output, position)
        if key in {
            ("(", 38),
            (")", 0),
            (")", 1),
            (")", 2),
            (")", 3),
            (")", 4),
            (")", 5),
            (")", 6),
            (")", 7),
            (")", 8),
            (")", 9),
            (")", 10),
            (")", 11),
            (")", 12),
            (")", 13),
            (")", 14),
            (")", 15),
            (")", 16),
            (")", 18),
            (")", 19),
            (")", 20),
            (")", 21),
            (")", 22),
            (")", 23),
            (")", 25),
            (")", 27),
            (")", 28),
            (")", 30),
            (")", 32),
            (")", 33),
            (")", 34),
            (")", 35),
            (")", 36),
            (")", 37),
            (")", 38),
            (")", 39),
            (")", 40),
            (")", 41),
            (")", 42),
            (")", 43),
            (")", 44),
            (")", 45),
            (")", 46),
            (")", 47),
            (")", 48),
            (")", 49),
            (")", 50),
            (")", 51),
            (")", 52),
            (")", 53),
            (")", 54),
            (")", 55),
            (")", 56),
            (")", 57),
            (")", 58),
            (")", 59),
            (")", 60),
            (")", 61),
            (")", 62),
            (")", 63),
            (")", 64),
            (")", 65),
            (")", 66),
            (")", 67),
            (")", 68),
            (")", 69),
            (")", 70),
            (")", 71),
            (")", 72),
            (")", 73),
            (")", 74),
            (")", 75),
            (")", 76),
            (")", 77),
            (")", 78),
            (")", 79),
            ("<s>", 0),
            ("<s>", 1),
            ("<s>", 2),
            ("<s>", 3),
            ("<s>", 4),
            ("<s>", 5),
            ("<s>", 6),
            ("<s>", 7),
            ("<s>", 8),
            ("<s>", 9),
            ("<s>", 10),
            ("<s>", 11),
            ("<s>", 12),
            ("<s>", 13),
            ("<s>", 14),
            ("<s>", 15),
            ("<s>", 16),
            ("<s>", 17),
            ("<s>", 18),
            ("<s>", 19),
            ("<s>", 20),
            ("<s>", 21),
            ("<s>", 22),
            ("<s>", 23),
            ("<s>", 24),
            ("<s>", 25),
            ("<s>", 26),
            ("<s>", 27),
            ("<s>", 28),
            ("<s>", 29),
            ("<s>", 30),
            ("<s>", 31),
            ("<s>", 32),
            ("<s>", 33),
            ("<s>", 34),
            ("<s>", 36),
            ("<s>", 37),
            ("<s>", 38),
            ("<s>", 39),
            ("<s>", 40),
            ("<s>", 41),
            ("<s>", 42),
            ("<s>", 43),
            ("<s>", 44),
            ("<s>", 45),
            ("<s>", 46),
            ("<s>", 47),
            ("<s>", 48),
            ("<s>", 49),
            ("<s>", 50),
            ("<s>", 51),
            ("<s>", 52),
            ("<s>", 53),
            ("<s>", 54),
            ("<s>", 55),
            ("<s>", 56),
            ("<s>", 57),
            ("<s>", 58),
            ("<s>", 59),
            ("<s>", 60),
            ("<s>", 61),
            ("<s>", 62),
            ("<s>", 63),
            ("<s>", 64),
            ("<s>", 65),
            ("<s>", 66),
            ("<s>", 67),
            ("<s>", 68),
            ("<s>", 69),
            ("<s>", 70),
            ("<s>", 71),
            ("<s>", 72),
            ("<s>", 73),
            ("<s>", 74),
            ("<s>", 75),
            ("<s>", 76),
            ("<s>", 77),
            ("<s>", 78),
            ("<s>", 79),
            ("{", 22),
            ("{", 38),
            ("}", 0),
            ("}", 1),
            ("}", 2),
            ("}", 3),
            ("}", 4),
            ("}", 5),
            ("}", 6),
            ("}", 7),
            ("}", 8),
            ("}", 9),
            ("}", 10),
            ("}", 11),
            ("}", 12),
            ("}", 13),
            ("}", 14),
            ("}", 15),
            ("}", 16),
            ("}", 17),
            ("}", 18),
            ("}", 19),
            ("}", 20),
            ("}", 21),
            ("}", 22),
            ("}", 23),
            ("}", 24),
            ("}", 25),
            ("}", 26),
            ("}", 27),
            ("}", 28),
            ("}", 29),
            ("}", 30),
            ("}", 31),
            ("}", 32),
            ("}", 33),
            ("}", 34),
            ("}", 35),
            ("}", 36),
            ("}", 37),
            ("}", 38),
            ("}", 39),
            ("}", 40),
            ("}", 41),
            ("}", 42),
            ("}", 43),
            ("}", 44),
            ("}", 45),
            ("}", 46),
            ("}", 47),
            ("}", 48),
            ("}", 49),
            ("}", 50),
            ("}", 51),
            ("}", 52),
            ("}", 53),
            ("}", 54),
            ("}", 55),
            ("}", 56),
            ("}", 57),
            ("}", 58),
            ("}", 59),
            ("}", 60),
            ("}", 61),
            ("}", 62),
            ("}", 63),
            ("}", 64),
            ("}", 65),
            ("}", 66),
            ("}", 67),
            ("}", 68),
            ("}", 69),
            ("}", 70),
            ("}", 71),
            ("}", 72),
            ("}", 73),
            ("}", 74),
            ("}", 75),
            ("}", 76),
            ("}", 77),
            ("}", 78),
            ("}", 79),
        }:
            return 2
        elif key in {("(", 11), ("{", 11), ("{", 12)}:
            return 1
        elif key in {(")", 17)}:
            return 15
        elif key in {(")", 24), (")", 26), (")", 31)}:
            return 43
        elif key in {(")", 29)}:
            return 57
        return 69

    mlp_0_2_outputs = [mlp_0_2(k0, k1) for k0, k1 in zip(attn_0_1_outputs, positions)]
    mlp_0_2_output_scores = classifier_weights.loc[
        [("mlp_0_2_outputs", str(v)) for v in mlp_0_2_outputs]
    ]

    # mlp_0_3 #####################################################
    def mlp_0_3(attn_0_3_output, attn_0_2_output):
        key = (attn_0_3_output, attn_0_2_output)
        if key in {("(", ")"), (")", "("), ("{", "}")}:
            return 15
        elif key in {
            ("(", "}"),
            (")", ")"),
            (")", "<s>"),
            (")", "{"),
            ("<s>", ")"),
            ("<s>", "}"),
            ("{", ")"),
            ("}", "("),
            ("}", "<s>"),
            ("}", "}"),
        }:
            return 5
        elif key in {("}", ")"), ("}", "{")}:
            return 69
        elif key in {(")", "}")}:
            return 57
        return 52

    mlp_0_3_outputs = [
        mlp_0_3(k0, k1) for k0, k1 in zip(attn_0_3_outputs, attn_0_2_outputs)
    ]
    mlp_0_3_output_scores = classifier_weights.loc[
        [("mlp_0_3_outputs", str(v)) for v in mlp_0_3_outputs]
    ]

    # num_mlp_0_0 #################################################
    def num_mlp_0_0(num_attn_0_3_output, num_attn_0_0_output):
        key = (num_attn_0_3_output, num_attn_0_0_output)
        return 68

    num_mlp_0_0_outputs = [
        num_mlp_0_0(k0, k1)
        for k0, k1 in zip(num_attn_0_3_outputs, num_attn_0_0_outputs)
    ]
    num_mlp_0_0_output_scores = classifier_weights.loc[
        [("num_mlp_0_0_outputs", str(v)) for v in num_mlp_0_0_outputs]
    ]

    # num_mlp_0_1 #################################################
    def num_mlp_0_1(num_attn_0_1_output, num_attn_0_3_output):
        key = (num_attn_0_1_output, num_attn_0_3_output)
        return 73

    num_mlp_0_1_outputs = [
        num_mlp_0_1(k0, k1)
        for k0, k1 in zip(num_attn_0_1_outputs, num_attn_0_3_outputs)
    ]
    num_mlp_0_1_output_scores = classifier_weights.loc[
        [("num_mlp_0_1_outputs", str(v)) for v in num_mlp_0_1_outputs]
    ]

    # num_mlp_0_2 #################################################
    def num_mlp_0_2(num_attn_0_1_output):
        key = num_attn_0_1_output
        return 51

    num_mlp_0_2_outputs = [num_mlp_0_2(k0) for k0 in num_attn_0_1_outputs]
    num_mlp_0_2_output_scores = classifier_weights.loc[
        [("num_mlp_0_2_outputs", str(v)) for v in num_mlp_0_2_outputs]
    ]

    # num_mlp_0_3 #################################################
    def num_mlp_0_3(num_attn_0_1_output, num_attn_0_2_output):
        key = (num_attn_0_1_output, num_attn_0_2_output)
        if key in {
            (42, 0),
            (43, 0),
            (43, 1),
            (44, 0),
            (44, 1),
            (44, 2),
            (45, 0),
            (45, 1),
            (45, 2),
            (45, 3),
            (46, 0),
            (46, 1),
            (46, 2),
            (46, 3),
            (46, 4),
            (47, 0),
            (47, 1),
            (47, 2),
            (47, 3),
            (47, 4),
            (47, 5),
            (47, 6),
            (48, 0),
            (48, 1),
            (48, 2),
            (48, 3),
            (48, 4),
            (48, 5),
            (48, 6),
            (48, 7),
            (48, 8),
            (49, 0),
            (49, 1),
            (49, 2),
            (49, 3),
            (49, 4),
            (49, 5),
            (49, 6),
            (49, 7),
            (49, 8),
            (49, 9),
            (49, 10),
            (50, 0),
            (50, 1),
            (50, 2),
            (50, 3),
            (50, 4),
            (50, 5),
            (50, 6),
            (50, 7),
            (50, 8),
            (50, 9),
            (50, 10),
            (50, 11),
            (50, 12),
            (51, 0),
            (51, 1),
            (51, 2),
            (51, 3),
            (51, 4),
            (51, 5),
            (51, 6),
            (51, 7),
            (51, 8),
            (51, 9),
            (51, 10),
            (51, 11),
            (51, 12),
            (51, 13),
            (51, 14),
            (52, 0),
            (52, 1),
            (52, 2),
            (52, 3),
            (52, 4),
            (52, 5),
            (52, 6),
            (52, 7),
            (52, 8),
            (52, 9),
            (52, 10),
            (52, 11),
            (52, 12),
            (52, 13),
            (52, 14),
            (52, 15),
            (52, 16),
            (53, 0),
            (53, 1),
            (53, 2),
            (53, 3),
            (53, 4),
            (53, 5),
            (53, 6),
            (53, 7),
            (53, 8),
            (53, 9),
            (53, 10),
            (53, 11),
            (53, 12),
            (53, 13),
            (53, 14),
            (53, 15),
            (53, 16),
            (53, 17),
            (53, 18),
            (54, 0),
            (54, 1),
            (54, 2),
            (54, 3),
            (54, 4),
            (54, 5),
            (54, 6),
            (54, 7),
            (54, 8),
            (54, 9),
            (54, 10),
            (54, 11),
            (54, 12),
            (54, 13),
            (54, 14),
            (54, 15),
            (54, 16),
            (54, 17),
            (54, 18),
            (54, 19),
            (54, 20),
            (55, 0),
            (55, 1),
            (55, 2),
            (55, 3),
            (55, 4),
            (55, 5),
            (55, 6),
            (55, 7),
            (55, 8),
            (55, 9),
            (55, 10),
            (55, 11),
            (55, 12),
            (55, 13),
            (55, 14),
            (55, 15),
            (55, 16),
            (55, 17),
            (55, 18),
            (55, 19),
            (55, 20),
            (55, 21),
            (55, 22),
            (56, 0),
            (56, 1),
            (56, 2),
            (56, 3),
            (56, 4),
            (56, 5),
            (56, 6),
            (56, 7),
            (56, 8),
            (56, 9),
            (56, 10),
            (56, 11),
            (56, 12),
            (56, 13),
            (56, 14),
            (56, 15),
            (56, 16),
            (56, 17),
            (56, 18),
            (56, 19),
            (56, 20),
            (56, 21),
            (56, 22),
            (56, 23),
            (56, 24),
            (56, 25),
            (57, 0),
            (57, 1),
            (57, 2),
            (57, 3),
            (57, 4),
            (57, 5),
            (57, 6),
            (57, 7),
            (57, 8),
            (57, 9),
            (57, 10),
            (57, 11),
            (57, 12),
            (57, 13),
            (57, 14),
            (57, 15),
            (57, 16),
            (57, 17),
            (57, 18),
            (57, 19),
            (57, 20),
            (57, 21),
            (57, 22),
            (57, 23),
            (57, 24),
            (57, 25),
            (57, 26),
            (57, 27),
            (58, 0),
            (58, 1),
            (58, 2),
            (58, 3),
            (58, 4),
            (58, 5),
            (58, 6),
            (58, 7),
            (58, 8),
            (58, 9),
            (58, 10),
            (58, 11),
            (58, 12),
            (58, 13),
            (58, 14),
            (58, 15),
            (58, 16),
            (58, 17),
            (58, 18),
            (58, 19),
            (58, 20),
            (58, 21),
            (58, 22),
            (58, 23),
            (58, 24),
            (58, 25),
            (58, 26),
            (58, 27),
            (58, 28),
            (58, 29),
            (59, 0),
            (59, 1),
            (59, 2),
            (59, 3),
            (59, 4),
            (59, 5),
            (59, 6),
            (59, 7),
            (59, 8),
            (59, 9),
            (59, 10),
            (59, 11),
            (59, 12),
            (59, 13),
            (59, 14),
            (59, 15),
            (59, 16),
            (59, 17),
            (59, 18),
            (59, 19),
            (59, 20),
            (59, 21),
            (59, 22),
            (59, 23),
            (59, 24),
            (59, 25),
            (59, 26),
            (59, 27),
            (59, 28),
            (59, 29),
            (59, 30),
            (59, 31),
            (60, 0),
            (60, 1),
            (60, 2),
            (60, 3),
            (60, 4),
            (60, 5),
            (60, 6),
            (60, 7),
            (60, 8),
            (60, 9),
            (60, 10),
            (60, 11),
            (60, 12),
            (60, 13),
            (60, 14),
            (60, 15),
            (60, 16),
            (60, 17),
            (60, 18),
            (60, 19),
            (60, 20),
            (60, 21),
            (60, 22),
            (60, 23),
            (60, 24),
            (60, 25),
            (60, 26),
            (60, 27),
            (60, 28),
            (60, 29),
            (60, 30),
            (60, 31),
            (60, 32),
            (60, 33),
            (61, 0),
            (61, 1),
            (61, 2),
            (61, 3),
            (61, 4),
            (61, 5),
            (61, 6),
            (61, 7),
            (61, 8),
            (61, 9),
            (61, 10),
            (61, 11),
            (61, 12),
            (61, 13),
            (61, 14),
            (61, 15),
            (61, 16),
            (61, 17),
            (61, 18),
            (61, 19),
            (61, 20),
            (61, 21),
            (61, 22),
            (61, 23),
            (61, 24),
            (61, 25),
            (61, 26),
            (61, 27),
            (61, 28),
            (61, 29),
            (61, 30),
            (61, 31),
            (61, 32),
            (61, 33),
            (61, 34),
            (61, 35),
            (62, 0),
            (62, 1),
            (62, 2),
            (62, 3),
            (62, 4),
            (62, 5),
            (62, 6),
            (62, 7),
            (62, 8),
            (62, 9),
            (62, 10),
            (62, 11),
            (62, 12),
            (62, 13),
            (62, 14),
            (62, 15),
            (62, 16),
            (62, 17),
            (62, 18),
            (62, 19),
            (62, 20),
            (62, 21),
            (62, 22),
            (62, 23),
            (62, 24),
            (62, 25),
            (62, 26),
            (62, 27),
            (62, 28),
            (62, 29),
            (62, 30),
            (62, 31),
            (62, 32),
            (62, 33),
            (62, 34),
            (62, 35),
            (62, 36),
            (62, 37),
            (63, 0),
            (63, 1),
            (63, 2),
            (63, 3),
            (63, 4),
            (63, 5),
            (63, 6),
            (63, 7),
            (63, 8),
            (63, 9),
            (63, 10),
            (63, 11),
            (63, 12),
            (63, 13),
            (63, 14),
            (63, 15),
            (63, 16),
            (63, 17),
            (63, 18),
            (63, 19),
            (63, 20),
            (63, 21),
            (63, 22),
            (63, 23),
            (63, 24),
            (63, 25),
            (63, 26),
            (63, 27),
            (63, 28),
            (63, 29),
            (63, 30),
            (63, 31),
            (63, 32),
            (63, 33),
            (63, 34),
            (63, 35),
            (63, 36),
            (63, 37),
            (63, 38),
            (63, 39),
            (64, 0),
            (64, 1),
            (64, 2),
            (64, 3),
            (64, 4),
            (64, 5),
            (64, 6),
            (64, 7),
            (64, 8),
            (64, 9),
            (64, 10),
            (64, 11),
            (64, 12),
            (64, 13),
            (64, 14),
            (64, 15),
            (64, 16),
            (64, 17),
            (64, 18),
            (64, 19),
            (64, 20),
            (64, 21),
            (64, 22),
            (64, 23),
            (64, 24),
            (64, 25),
            (64, 26),
            (64, 27),
            (64, 28),
            (64, 29),
            (64, 30),
            (64, 31),
            (64, 32),
            (64, 33),
            (64, 34),
            (64, 35),
            (64, 36),
            (64, 37),
            (64, 38),
            (64, 39),
            (64, 40),
            (64, 41),
            (65, 0),
            (65, 1),
            (65, 2),
            (65, 3),
            (65, 4),
            (65, 5),
            (65, 6),
            (65, 7),
            (65, 8),
            (65, 9),
            (65, 10),
            (65, 11),
            (65, 12),
            (65, 13),
            (65, 14),
            (65, 15),
            (65, 16),
            (65, 17),
            (65, 18),
            (65, 19),
            (65, 20),
            (65, 21),
            (65, 22),
            (65, 23),
            (65, 24),
            (65, 25),
            (65, 26),
            (65, 27),
            (65, 28),
            (65, 29),
            (65, 30),
            (65, 31),
            (65, 32),
            (65, 33),
            (65, 34),
            (65, 35),
            (65, 36),
            (65, 37),
            (65, 38),
            (65, 39),
            (65, 40),
            (65, 41),
            (65, 42),
            (65, 43),
            (66, 0),
            (66, 1),
            (66, 2),
            (66, 3),
            (66, 4),
            (66, 5),
            (66, 6),
            (66, 7),
            (66, 8),
            (66, 9),
            (66, 10),
            (66, 11),
            (66, 12),
            (66, 13),
            (66, 14),
            (66, 15),
            (66, 16),
            (66, 17),
            (66, 18),
            (66, 19),
            (66, 20),
            (66, 21),
            (66, 22),
            (66, 23),
            (66, 24),
            (66, 25),
            (66, 26),
            (66, 27),
            (66, 28),
            (66, 29),
            (66, 30),
            (66, 31),
            (66, 32),
            (66, 33),
            (66, 34),
            (66, 35),
            (66, 36),
            (66, 37),
            (66, 38),
            (66, 39),
            (66, 40),
            (66, 41),
            (66, 42),
            (66, 43),
            (66, 44),
            (66, 45),
            (66, 46),
            (67, 0),
            (67, 1),
            (67, 2),
            (67, 3),
            (67, 4),
            (67, 5),
            (67, 6),
            (67, 7),
            (67, 8),
            (67, 9),
            (67, 10),
            (67, 11),
            (67, 12),
            (67, 13),
            (67, 14),
            (67, 15),
            (67, 16),
            (67, 17),
            (67, 18),
            (67, 19),
            (67, 20),
            (67, 21),
            (67, 22),
            (67, 23),
            (67, 24),
            (67, 25),
            (67, 26),
            (67, 27),
            (67, 28),
            (67, 29),
            (67, 30),
            (67, 31),
            (67, 32),
            (67, 33),
            (67, 34),
            (67, 35),
            (67, 36),
            (67, 37),
            (67, 38),
            (67, 39),
            (67, 40),
            (67, 41),
            (67, 42),
            (67, 43),
            (67, 44),
            (67, 45),
            (67, 46),
            (67, 47),
            (67, 48),
            (68, 0),
            (68, 1),
            (68, 2),
            (68, 3),
            (68, 4),
            (68, 5),
            (68, 6),
            (68, 7),
            (68, 8),
            (68, 9),
            (68, 10),
            (68, 11),
            (68, 12),
            (68, 13),
            (68, 14),
            (68, 15),
            (68, 16),
            (68, 17),
            (68, 18),
            (68, 19),
            (68, 20),
            (68, 21),
            (68, 22),
            (68, 23),
            (68, 24),
            (68, 25),
            (68, 26),
            (68, 27),
            (68, 28),
            (68, 29),
            (68, 30),
            (68, 31),
            (68, 32),
            (68, 33),
            (68, 34),
            (68, 35),
            (68, 36),
            (68, 37),
            (68, 38),
            (68, 39),
            (68, 40),
            (68, 41),
            (68, 42),
            (68, 43),
            (68, 44),
            (68, 45),
            (68, 46),
            (68, 47),
            (68, 48),
            (68, 49),
            (68, 50),
            (69, 0),
            (69, 1),
            (69, 2),
            (69, 3),
            (69, 4),
            (69, 5),
            (69, 6),
            (69, 7),
            (69, 8),
            (69, 9),
            (69, 10),
            (69, 11),
            (69, 12),
            (69, 13),
            (69, 14),
            (69, 15),
            (69, 16),
            (69, 17),
            (69, 18),
            (69, 19),
            (69, 20),
            (69, 21),
            (69, 22),
            (69, 23),
            (69, 24),
            (69, 25),
            (69, 26),
            (69, 27),
            (69, 28),
            (69, 29),
            (69, 30),
            (69, 31),
            (69, 32),
            (69, 33),
            (69, 34),
            (69, 35),
            (69, 36),
            (69, 37),
            (69, 38),
            (69, 39),
            (69, 40),
            (69, 41),
            (69, 42),
            (69, 43),
            (69, 44),
            (69, 45),
            (69, 46),
            (69, 47),
            (69, 48),
            (69, 49),
            (69, 50),
            (69, 51),
            (69, 52),
            (70, 0),
            (70, 1),
            (70, 2),
            (70, 3),
            (70, 4),
            (70, 5),
            (70, 6),
            (70, 7),
            (70, 8),
            (70, 9),
            (70, 10),
            (70, 11),
            (70, 12),
            (70, 13),
            (70, 14),
            (70, 15),
            (70, 16),
            (70, 17),
            (70, 18),
            (70, 19),
            (70, 20),
            (70, 21),
            (70, 22),
            (70, 23),
            (70, 24),
            (70, 25),
            (70, 26),
            (70, 27),
            (70, 28),
            (70, 29),
            (70, 30),
            (70, 31),
            (70, 32),
            (70, 33),
            (70, 34),
            (70, 35),
            (70, 36),
            (70, 37),
            (70, 38),
            (70, 39),
            (70, 40),
            (70, 41),
            (70, 42),
            (70, 43),
            (70, 44),
            (70, 45),
            (70, 46),
            (70, 47),
            (70, 48),
            (70, 49),
            (70, 50),
            (70, 51),
            (70, 52),
            (70, 53),
            (70, 54),
            (71, 0),
            (71, 1),
            (71, 2),
            (71, 3),
            (71, 4),
            (71, 5),
            (71, 6),
            (71, 7),
            (71, 8),
            (71, 9),
            (71, 10),
            (71, 11),
            (71, 12),
            (71, 13),
            (71, 14),
            (71, 15),
            (71, 16),
            (71, 17),
            (71, 18),
            (71, 19),
            (71, 20),
            (71, 21),
            (71, 22),
            (71, 23),
            (71, 24),
            (71, 25),
            (71, 26),
            (71, 27),
            (71, 28),
            (71, 29),
            (71, 30),
            (71, 31),
            (71, 32),
            (71, 33),
            (71, 34),
            (71, 35),
            (71, 36),
            (71, 37),
            (71, 38),
            (71, 39),
            (71, 40),
            (71, 41),
            (71, 42),
            (71, 43),
            (71, 44),
            (71, 45),
            (71, 46),
            (71, 47),
            (71, 48),
            (71, 49),
            (71, 50),
            (71, 51),
            (71, 52),
            (71, 53),
            (71, 54),
            (71, 55),
            (71, 56),
            (72, 0),
            (72, 1),
            (72, 2),
            (72, 3),
            (72, 4),
            (72, 5),
            (72, 6),
            (72, 7),
            (72, 8),
            (72, 9),
            (72, 10),
            (72, 11),
            (72, 12),
            (72, 13),
            (72, 14),
            (72, 15),
            (72, 16),
            (72, 17),
            (72, 18),
            (72, 19),
            (72, 20),
            (72, 21),
            (72, 22),
            (72, 23),
            (72, 24),
            (72, 25),
            (72, 26),
            (72, 27),
            (72, 28),
            (72, 29),
            (72, 30),
            (72, 31),
            (72, 32),
            (72, 33),
            (72, 34),
            (72, 35),
            (72, 36),
            (72, 37),
            (72, 38),
            (72, 39),
            (72, 40),
            (72, 41),
            (72, 42),
            (72, 43),
            (72, 44),
            (72, 45),
            (72, 46),
            (72, 47),
            (72, 48),
            (72, 49),
            (72, 50),
            (72, 51),
            (72, 52),
            (72, 53),
            (72, 54),
            (72, 55),
            (72, 56),
            (72, 57),
            (72, 58),
            (73, 0),
            (73, 1),
            (73, 2),
            (73, 3),
            (73, 4),
            (73, 5),
            (73, 6),
            (73, 7),
            (73, 8),
            (73, 9),
            (73, 10),
            (73, 11),
            (73, 12),
            (73, 13),
            (73, 14),
            (73, 15),
            (73, 16),
            (73, 17),
            (73, 18),
            (73, 19),
            (73, 20),
            (73, 21),
            (73, 22),
            (73, 23),
            (73, 24),
            (73, 25),
            (73, 26),
            (73, 27),
            (73, 28),
            (73, 29),
            (73, 30),
            (73, 31),
            (73, 32),
            (73, 33),
            (73, 34),
            (73, 35),
            (73, 36),
            (73, 37),
            (73, 38),
            (73, 39),
            (73, 40),
            (73, 41),
            (73, 42),
            (73, 43),
            (73, 44),
            (73, 45),
            (73, 46),
            (73, 47),
            (73, 48),
            (73, 49),
            (73, 50),
            (73, 51),
            (73, 52),
            (73, 53),
            (73, 54),
            (73, 55),
            (73, 56),
            (73, 57),
            (73, 58),
            (73, 59),
            (73, 60),
            (74, 0),
            (74, 1),
            (74, 2),
            (74, 3),
            (74, 4),
            (74, 5),
            (74, 6),
            (74, 7),
            (74, 8),
            (74, 9),
            (74, 10),
            (74, 11),
            (74, 12),
            (74, 13),
            (74, 14),
            (74, 15),
            (74, 16),
            (74, 17),
            (74, 18),
            (74, 19),
            (74, 20),
            (74, 21),
            (74, 22),
            (74, 23),
            (74, 24),
            (74, 25),
            (74, 26),
            (74, 27),
            (74, 28),
            (74, 29),
            (74, 30),
            (74, 31),
            (74, 32),
            (74, 33),
            (74, 34),
            (74, 35),
            (74, 36),
            (74, 37),
            (74, 38),
            (74, 39),
            (74, 40),
            (74, 41),
            (74, 42),
            (74, 43),
            (74, 44),
            (74, 45),
            (74, 46),
            (74, 47),
            (74, 48),
            (74, 49),
            (74, 50),
            (74, 51),
            (74, 52),
            (74, 53),
            (74, 54),
            (74, 55),
            (74, 56),
            (74, 57),
            (74, 58),
            (74, 59),
            (74, 60),
            (74, 61),
            (74, 62),
            (75, 0),
            (75, 1),
            (75, 2),
            (75, 3),
            (75, 4),
            (75, 5),
            (75, 6),
            (75, 7),
            (75, 8),
            (75, 9),
            (75, 10),
            (75, 11),
            (75, 12),
            (75, 13),
            (75, 14),
            (75, 15),
            (75, 16),
            (75, 17),
            (75, 18),
            (75, 19),
            (75, 20),
            (75, 21),
            (75, 22),
            (75, 23),
            (75, 24),
            (75, 25),
            (75, 26),
            (75, 27),
            (75, 28),
            (75, 29),
            (75, 30),
            (75, 31),
            (75, 32),
            (75, 33),
            (75, 34),
            (75, 35),
            (75, 36),
            (75, 37),
            (75, 38),
            (75, 39),
            (75, 40),
            (75, 41),
            (75, 42),
            (75, 43),
            (75, 44),
            (75, 45),
            (75, 46),
            (75, 47),
            (75, 48),
            (75, 49),
            (75, 50),
            (75, 51),
            (75, 52),
            (75, 53),
            (75, 54),
            (75, 55),
            (75, 56),
            (75, 57),
            (75, 58),
            (75, 59),
            (75, 60),
            (75, 61),
            (75, 62),
            (75, 63),
            (75, 64),
            (76, 0),
            (76, 1),
            (76, 2),
            (76, 3),
            (76, 4),
            (76, 5),
            (76, 6),
            (76, 7),
            (76, 8),
            (76, 9),
            (76, 10),
            (76, 11),
            (76, 12),
            (76, 13),
            (76, 14),
            (76, 15),
            (76, 16),
            (76, 17),
            (76, 18),
            (76, 19),
            (76, 20),
            (76, 21),
            (76, 22),
            (76, 23),
            (76, 24),
            (76, 25),
            (76, 26),
            (76, 27),
            (76, 28),
            (76, 29),
            (76, 30),
            (76, 31),
            (76, 32),
            (76, 33),
            (76, 34),
            (76, 35),
            (76, 36),
            (76, 37),
            (76, 38),
            (76, 39),
            (76, 40),
            (76, 41),
            (76, 42),
            (76, 43),
            (76, 44),
            (76, 45),
            (76, 46),
            (76, 47),
            (76, 48),
            (76, 49),
            (76, 50),
            (76, 51),
            (76, 52),
            (76, 53),
            (76, 54),
            (76, 55),
            (76, 56),
            (76, 57),
            (76, 58),
            (76, 59),
            (76, 60),
            (76, 61),
            (76, 62),
            (76, 63),
            (76, 64),
            (76, 65),
            (76, 66),
            (76, 67),
            (77, 0),
            (77, 1),
            (77, 2),
            (77, 3),
            (77, 4),
            (77, 5),
            (77, 6),
            (77, 7),
            (77, 8),
            (77, 9),
            (77, 10),
            (77, 11),
            (77, 12),
            (77, 13),
            (77, 14),
            (77, 15),
            (77, 16),
            (77, 17),
            (77, 18),
            (77, 19),
            (77, 20),
            (77, 21),
            (77, 22),
            (77, 23),
            (77, 24),
            (77, 25),
            (77, 26),
            (77, 27),
            (77, 28),
            (77, 29),
            (77, 30),
            (77, 31),
            (77, 32),
            (77, 33),
            (77, 34),
            (77, 35),
            (77, 36),
            (77, 37),
            (77, 38),
            (77, 39),
            (77, 40),
            (77, 41),
            (77, 42),
            (77, 43),
            (77, 44),
            (77, 45),
            (77, 46),
            (77, 47),
            (77, 48),
            (77, 49),
            (77, 50),
            (77, 51),
            (77, 52),
            (77, 53),
            (77, 54),
            (77, 55),
            (77, 56),
            (77, 57),
            (77, 58),
            (77, 59),
            (77, 60),
            (77, 61),
            (77, 62),
            (77, 63),
            (77, 64),
            (77, 65),
            (77, 66),
            (77, 67),
            (77, 68),
            (77, 69),
            (78, 0),
            (78, 1),
            (78, 2),
            (78, 3),
            (78, 4),
            (78, 5),
            (78, 6),
            (78, 7),
            (78, 8),
            (78, 9),
            (78, 10),
            (78, 11),
            (78, 12),
            (78, 13),
            (78, 14),
            (78, 15),
            (78, 16),
            (78, 17),
            (78, 18),
            (78, 19),
            (78, 20),
            (78, 21),
            (78, 22),
            (78, 23),
            (78, 24),
            (78, 25),
            (78, 26),
            (78, 27),
            (78, 28),
            (78, 29),
            (78, 30),
            (78, 31),
            (78, 32),
            (78, 33),
            (78, 34),
            (78, 35),
            (78, 36),
            (78, 37),
            (78, 38),
            (78, 39),
            (78, 40),
            (78, 41),
            (78, 42),
            (78, 43),
            (78, 44),
            (78, 45),
            (78, 46),
            (78, 47),
            (78, 48),
            (78, 49),
            (78, 50),
            (78, 51),
            (78, 52),
            (78, 53),
            (78, 54),
            (78, 55),
            (78, 56),
            (78, 57),
            (78, 58),
            (78, 59),
            (78, 60),
            (78, 61),
            (78, 62),
            (78, 63),
            (78, 64),
            (78, 65),
            (78, 66),
            (78, 67),
            (78, 68),
            (78, 69),
            (78, 70),
            (78, 71),
            (79, 0),
            (79, 1),
            (79, 2),
            (79, 3),
            (79, 4),
            (79, 5),
            (79, 6),
            (79, 7),
            (79, 8),
            (79, 9),
            (79, 10),
            (79, 11),
            (79, 12),
            (79, 13),
            (79, 14),
            (79, 15),
            (79, 16),
            (79, 17),
            (79, 18),
            (79, 19),
            (79, 20),
            (79, 21),
            (79, 22),
            (79, 23),
            (79, 24),
            (79, 25),
            (79, 26),
            (79, 27),
            (79, 28),
            (79, 29),
            (79, 30),
            (79, 31),
            (79, 32),
            (79, 33),
            (79, 34),
            (79, 35),
            (79, 36),
            (79, 37),
            (79, 38),
            (79, 39),
            (79, 40),
            (79, 41),
            (79, 42),
            (79, 43),
            (79, 44),
            (79, 45),
            (79, 46),
            (79, 47),
            (79, 48),
            (79, 49),
            (79, 50),
            (79, 51),
            (79, 52),
            (79, 53),
            (79, 54),
            (79, 55),
            (79, 56),
            (79, 57),
            (79, 58),
            (79, 59),
            (79, 60),
            (79, 61),
            (79, 62),
            (79, 63),
            (79, 64),
            (79, 65),
            (79, 66),
            (79, 67),
            (79, 68),
            (79, 69),
            (79, 70),
            (79, 71),
            (79, 72),
            (79, 73),
        }:
            return 77
        elif key in {
            (21, 0),
            (22, 0),
            (22, 1),
            (23, 0),
            (23, 1),
            (23, 2),
            (23, 3),
            (24, 0),
            (24, 1),
            (24, 2),
            (24, 3),
            (24, 4),
            (25, 0),
            (25, 1),
            (25, 2),
            (25, 3),
            (25, 4),
            (25, 5),
            (25, 6),
            (26, 0),
            (26, 1),
            (26, 2),
            (26, 3),
            (26, 4),
            (26, 5),
            (26, 6),
            (26, 7),
            (27, 0),
            (27, 1),
            (27, 2),
            (27, 3),
            (27, 4),
            (27, 5),
            (27, 6),
            (27, 7),
            (27, 8),
            (27, 9),
            (28, 0),
            (28, 1),
            (28, 2),
            (28, 3),
            (28, 4),
            (28, 5),
            (28, 6),
            (28, 7),
            (28, 8),
            (28, 9),
            (28, 10),
            (28, 11),
            (29, 0),
            (29, 1),
            (29, 2),
            (29, 3),
            (29, 4),
            (29, 5),
            (29, 6),
            (29, 7),
            (29, 8),
            (29, 9),
            (29, 10),
            (29, 11),
            (29, 12),
            (30, 0),
            (30, 1),
            (30, 2),
            (30, 3),
            (30, 4),
            (30, 5),
            (30, 6),
            (30, 7),
            (30, 8),
            (30, 9),
            (30, 10),
            (30, 11),
            (30, 12),
            (30, 13),
            (30, 14),
            (31, 0),
            (31, 1),
            (31, 2),
            (31, 3),
            (31, 4),
            (31, 5),
            (31, 6),
            (31, 7),
            (31, 8),
            (31, 9),
            (31, 10),
            (31, 11),
            (31, 12),
            (31, 13),
            (31, 14),
            (31, 15),
            (32, 0),
            (32, 1),
            (32, 2),
            (32, 3),
            (32, 4),
            (32, 5),
            (32, 6),
            (32, 7),
            (32, 8),
            (32, 9),
            (32, 10),
            (32, 11),
            (32, 12),
            (32, 13),
            (32, 14),
            (32, 15),
            (32, 16),
            (32, 17),
            (33, 0),
            (33, 1),
            (33, 2),
            (33, 3),
            (33, 4),
            (33, 5),
            (33, 6),
            (33, 7),
            (33, 8),
            (33, 9),
            (33, 10),
            (33, 11),
            (33, 12),
            (33, 13),
            (33, 14),
            (33, 15),
            (33, 16),
            (33, 17),
            (33, 18),
            (34, 0),
            (34, 1),
            (34, 2),
            (34, 3),
            (34, 4),
            (34, 5),
            (34, 6),
            (34, 7),
            (34, 8),
            (34, 9),
            (34, 10),
            (34, 11),
            (34, 12),
            (34, 13),
            (34, 14),
            (34, 15),
            (34, 16),
            (34, 17),
            (34, 18),
            (34, 19),
            (34, 20),
            (35, 0),
            (35, 1),
            (35, 2),
            (35, 3),
            (35, 4),
            (35, 5),
            (35, 6),
            (35, 7),
            (35, 8),
            (35, 9),
            (35, 10),
            (35, 11),
            (35, 12),
            (35, 13),
            (35, 14),
            (35, 15),
            (35, 16),
            (35, 17),
            (35, 18),
            (35, 19),
            (35, 20),
            (35, 21),
            (36, 0),
            (36, 1),
            (36, 2),
            (36, 3),
            (36, 4),
            (36, 5),
            (36, 6),
            (36, 7),
            (36, 8),
            (36, 9),
            (36, 10),
            (36, 11),
            (36, 12),
            (36, 13),
            (36, 14),
            (36, 15),
            (36, 16),
            (36, 17),
            (36, 18),
            (36, 19),
            (36, 20),
            (36, 21),
            (36, 22),
            (36, 23),
            (37, 0),
            (37, 1),
            (37, 2),
            (37, 3),
            (37, 4),
            (37, 5),
            (37, 6),
            (37, 7),
            (37, 8),
            (37, 9),
            (37, 10),
            (37, 11),
            (37, 12),
            (37, 13),
            (37, 14),
            (37, 15),
            (37, 16),
            (37, 17),
            (37, 18),
            (37, 19),
            (37, 20),
            (37, 21),
            (37, 22),
            (37, 23),
            (37, 24),
            (37, 25),
            (38, 0),
            (38, 1),
            (38, 2),
            (38, 3),
            (38, 4),
            (38, 5),
            (38, 6),
            (38, 7),
            (38, 8),
            (38, 9),
            (38, 10),
            (38, 11),
            (38, 12),
            (38, 13),
            (38, 14),
            (38, 15),
            (38, 16),
            (38, 17),
            (38, 18),
            (38, 19),
            (38, 20),
            (38, 21),
            (38, 22),
            (38, 23),
            (38, 24),
            (38, 25),
            (38, 26),
            (39, 0),
            (39, 1),
            (39, 2),
            (39, 3),
            (39, 4),
            (39, 5),
            (39, 6),
            (39, 7),
            (39, 8),
            (39, 9),
            (39, 10),
            (39, 11),
            (39, 12),
            (39, 13),
            (39, 14),
            (39, 15),
            (39, 16),
            (39, 17),
            (39, 18),
            (39, 19),
            (39, 20),
            (39, 21),
            (39, 22),
            (39, 23),
            (39, 24),
            (39, 25),
            (39, 26),
            (39, 27),
            (39, 28),
            (40, 0),
            (40, 1),
            (40, 2),
            (40, 3),
            (40, 4),
            (40, 5),
            (40, 6),
            (40, 7),
            (40, 8),
            (40, 9),
            (40, 10),
            (40, 11),
            (40, 12),
            (40, 13),
            (40, 14),
            (40, 15),
            (40, 16),
            (40, 17),
            (40, 18),
            (40, 19),
            (40, 20),
            (40, 21),
            (40, 22),
            (40, 23),
            (40, 24),
            (40, 25),
            (40, 26),
            (40, 27),
            (40, 28),
            (40, 29),
            (41, 0),
            (41, 1),
            (41, 2),
            (41, 3),
            (41, 4),
            (41, 5),
            (41, 6),
            (41, 7),
            (41, 8),
            (41, 9),
            (41, 10),
            (41, 11),
            (41, 12),
            (41, 13),
            (41, 14),
            (41, 15),
            (41, 16),
            (41, 17),
            (41, 18),
            (41, 19),
            (41, 20),
            (41, 21),
            (41, 22),
            (41, 23),
            (41, 24),
            (41, 25),
            (41, 26),
            (41, 27),
            (41, 28),
            (41, 29),
            (41, 30),
            (41, 31),
            (42, 1),
            (42, 2),
            (42, 3),
            (42, 4),
            (42, 5),
            (42, 6),
            (42, 7),
            (42, 8),
            (42, 9),
            (42, 10),
            (42, 11),
            (42, 12),
            (42, 13),
            (42, 14),
            (42, 15),
            (42, 16),
            (42, 17),
            (42, 18),
            (42, 19),
            (42, 20),
            (42, 21),
            (42, 22),
            (42, 23),
            (42, 24),
            (42, 25),
            (42, 26),
            (42, 27),
            (42, 28),
            (42, 29),
            (42, 30),
            (42, 31),
            (42, 32),
            (43, 2),
            (43, 3),
            (43, 4),
            (43, 5),
            (43, 6),
            (43, 7),
            (43, 8),
            (43, 9),
            (43, 10),
            (43, 11),
            (43, 12),
            (43, 13),
            (43, 14),
            (43, 15),
            (43, 16),
            (43, 17),
            (43, 18),
            (43, 19),
            (43, 20),
            (43, 21),
            (43, 22),
            (43, 23),
            (43, 24),
            (43, 25),
            (43, 26),
            (43, 27),
            (43, 28),
            (43, 29),
            (43, 30),
            (43, 31),
            (43, 32),
            (43, 33),
            (43, 34),
            (44, 3),
            (44, 4),
            (44, 5),
            (44, 6),
            (44, 7),
            (44, 8),
            (44, 9),
            (44, 10),
            (44, 11),
            (44, 12),
            (44, 13),
            (44, 14),
            (44, 15),
            (44, 16),
            (44, 17),
            (44, 18),
            (44, 19),
            (44, 20),
            (44, 21),
            (44, 22),
            (44, 23),
            (44, 24),
            (44, 25),
            (44, 26),
            (44, 27),
            (44, 28),
            (44, 29),
            (44, 30),
            (44, 31),
            (44, 32),
            (44, 33),
            (44, 34),
            (44, 35),
            (45, 4),
            (45, 5),
            (45, 6),
            (45, 7),
            (45, 8),
            (45, 9),
            (45, 10),
            (45, 11),
            (45, 12),
            (45, 13),
            (45, 14),
            (45, 15),
            (45, 16),
            (45, 17),
            (45, 18),
            (45, 19),
            (45, 20),
            (45, 21),
            (45, 22),
            (45, 23),
            (45, 24),
            (45, 25),
            (45, 26),
            (45, 27),
            (45, 28),
            (45, 29),
            (45, 30),
            (45, 31),
            (45, 32),
            (45, 33),
            (45, 34),
            (45, 35),
            (45, 36),
            (45, 37),
            (46, 5),
            (46, 6),
            (46, 7),
            (46, 8),
            (46, 9),
            (46, 10),
            (46, 11),
            (46, 12),
            (46, 13),
            (46, 14),
            (46, 15),
            (46, 16),
            (46, 17),
            (46, 18),
            (46, 19),
            (46, 20),
            (46, 21),
            (46, 22),
            (46, 23),
            (46, 24),
            (46, 25),
            (46, 26),
            (46, 27),
            (46, 28),
            (46, 29),
            (46, 30),
            (46, 31),
            (46, 32),
            (46, 33),
            (46, 34),
            (46, 35),
            (46, 36),
            (46, 37),
            (46, 38),
            (46, 39),
            (47, 7),
            (47, 8),
            (47, 9),
            (47, 10),
            (47, 11),
            (47, 12),
            (47, 13),
            (47, 14),
            (47, 15),
            (47, 16),
            (47, 17),
            (47, 18),
            (47, 19),
            (47, 20),
            (47, 21),
            (47, 22),
            (47, 23),
            (47, 24),
            (47, 25),
            (47, 26),
            (47, 27),
            (47, 28),
            (47, 29),
            (47, 30),
            (47, 31),
            (47, 32),
            (47, 33),
            (47, 34),
            (47, 35),
            (47, 36),
            (47, 37),
            (47, 38),
            (47, 39),
            (47, 40),
            (48, 9),
            (48, 10),
            (48, 11),
            (48, 12),
            (48, 13),
            (48, 14),
            (48, 15),
            (48, 16),
            (48, 17),
            (48, 18),
            (48, 19),
            (48, 20),
            (48, 21),
            (48, 22),
            (48, 23),
            (48, 24),
            (48, 25),
            (48, 26),
            (48, 27),
            (48, 28),
            (48, 29),
            (48, 30),
            (48, 31),
            (48, 32),
            (48, 33),
            (48, 34),
            (48, 35),
            (48, 36),
            (48, 37),
            (48, 38),
            (48, 39),
            (48, 40),
            (48, 41),
            (48, 42),
            (49, 11),
            (49, 12),
            (49, 13),
            (49, 14),
            (49, 15),
            (49, 16),
            (49, 17),
            (49, 18),
            (49, 19),
            (49, 20),
            (49, 21),
            (49, 22),
            (49, 23),
            (49, 24),
            (49, 25),
            (49, 26),
            (49, 27),
            (49, 28),
            (49, 29),
            (49, 30),
            (49, 31),
            (49, 32),
            (49, 33),
            (49, 34),
            (49, 35),
            (49, 36),
            (49, 37),
            (49, 38),
            (49, 39),
            (49, 40),
            (49, 41),
            (49, 42),
            (49, 43),
            (50, 13),
            (50, 14),
            (50, 15),
            (50, 16),
            (50, 17),
            (50, 18),
            (50, 19),
            (50, 20),
            (50, 21),
            (50, 22),
            (50, 23),
            (50, 24),
            (50, 25),
            (50, 26),
            (50, 27),
            (50, 28),
            (50, 29),
            (50, 30),
            (50, 31),
            (50, 32),
            (50, 33),
            (50, 34),
            (50, 35),
            (50, 36),
            (50, 37),
            (50, 38),
            (50, 39),
            (50, 40),
            (50, 41),
            (50, 42),
            (50, 43),
            (50, 44),
            (50, 45),
            (51, 15),
            (51, 16),
            (51, 17),
            (51, 18),
            (51, 19),
            (51, 20),
            (51, 21),
            (51, 22),
            (51, 23),
            (51, 24),
            (51, 25),
            (51, 26),
            (51, 27),
            (51, 28),
            (51, 29),
            (51, 30),
            (51, 31),
            (51, 32),
            (51, 33),
            (51, 34),
            (51, 35),
            (51, 36),
            (51, 37),
            (51, 38),
            (51, 39),
            (51, 40),
            (51, 41),
            (51, 42),
            (51, 43),
            (51, 44),
            (51, 45),
            (51, 46),
            (52, 17),
            (52, 18),
            (52, 19),
            (52, 20),
            (52, 21),
            (52, 22),
            (52, 23),
            (52, 24),
            (52, 25),
            (52, 26),
            (52, 27),
            (52, 28),
            (52, 29),
            (52, 30),
            (52, 31),
            (52, 32),
            (52, 33),
            (52, 34),
            (52, 35),
            (52, 36),
            (52, 37),
            (52, 38),
            (52, 39),
            (52, 40),
            (52, 41),
            (52, 42),
            (52, 43),
            (52, 44),
            (52, 45),
            (52, 46),
            (52, 47),
            (52, 48),
            (53, 19),
            (53, 20),
            (53, 21),
            (53, 22),
            (53, 23),
            (53, 24),
            (53, 25),
            (53, 26),
            (53, 27),
            (53, 28),
            (53, 29),
            (53, 30),
            (53, 31),
            (53, 32),
            (53, 33),
            (53, 34),
            (53, 35),
            (53, 36),
            (53, 37),
            (53, 38),
            (53, 39),
            (53, 40),
            (53, 41),
            (53, 42),
            (53, 43),
            (53, 44),
            (53, 45),
            (53, 46),
            (53, 47),
            (53, 48),
            (53, 49),
            (53, 50),
            (54, 21),
            (54, 22),
            (54, 23),
            (54, 24),
            (54, 25),
            (54, 26),
            (54, 27),
            (54, 28),
            (54, 29),
            (54, 30),
            (54, 31),
            (54, 32),
            (54, 33),
            (54, 34),
            (54, 35),
            (54, 36),
            (54, 37),
            (54, 38),
            (54, 39),
            (54, 40),
            (54, 41),
            (54, 42),
            (54, 43),
            (54, 44),
            (54, 45),
            (54, 46),
            (54, 47),
            (54, 48),
            (54, 49),
            (54, 50),
            (54, 51),
            (55, 23),
            (55, 24),
            (55, 25),
            (55, 26),
            (55, 27),
            (55, 28),
            (55, 29),
            (55, 30),
            (55, 31),
            (55, 32),
            (55, 33),
            (55, 34),
            (55, 35),
            (55, 36),
            (55, 37),
            (55, 38),
            (55, 39),
            (55, 40),
            (55, 41),
            (55, 42),
            (55, 43),
            (55, 44),
            (55, 45),
            (55, 46),
            (55, 47),
            (55, 48),
            (55, 49),
            (55, 50),
            (55, 51),
            (55, 52),
            (55, 53),
            (56, 26),
            (56, 27),
            (56, 28),
            (56, 29),
            (56, 30),
            (56, 31),
            (56, 32),
            (56, 33),
            (56, 34),
            (56, 35),
            (56, 36),
            (56, 37),
            (56, 38),
            (56, 39),
            (56, 40),
            (56, 41),
            (56, 42),
            (56, 43),
            (56, 44),
            (56, 45),
            (56, 46),
            (56, 47),
            (56, 48),
            (56, 49),
            (56, 50),
            (56, 51),
            (56, 52),
            (56, 53),
            (56, 54),
            (57, 28),
            (57, 29),
            (57, 30),
            (57, 31),
            (57, 32),
            (57, 33),
            (57, 34),
            (57, 35),
            (57, 36),
            (57, 37),
            (57, 38),
            (57, 39),
            (57, 40),
            (57, 41),
            (57, 42),
            (57, 43),
            (57, 44),
            (57, 45),
            (57, 46),
            (57, 47),
            (57, 48),
            (57, 49),
            (57, 50),
            (57, 51),
            (57, 52),
            (57, 53),
            (57, 54),
            (57, 55),
            (57, 56),
            (58, 30),
            (58, 31),
            (58, 32),
            (58, 33),
            (58, 34),
            (58, 35),
            (58, 36),
            (58, 37),
            (58, 38),
            (58, 39),
            (58, 40),
            (58, 41),
            (58, 42),
            (58, 43),
            (58, 44),
            (58, 45),
            (58, 46),
            (58, 47),
            (58, 48),
            (58, 49),
            (58, 50),
            (58, 51),
            (58, 52),
            (58, 53),
            (58, 54),
            (58, 55),
            (58, 56),
            (58, 57),
            (58, 58),
            (59, 32),
            (59, 33),
            (59, 34),
            (59, 35),
            (59, 36),
            (59, 37),
            (59, 38),
            (59, 39),
            (59, 40),
            (59, 41),
            (59, 42),
            (59, 43),
            (59, 44),
            (59, 45),
            (59, 46),
            (59, 47),
            (59, 48),
            (59, 49),
            (59, 50),
            (59, 51),
            (59, 52),
            (59, 53),
            (59, 54),
            (59, 55),
            (59, 56),
            (59, 57),
            (59, 58),
            (59, 59),
            (60, 34),
            (60, 35),
            (60, 36),
            (60, 37),
            (60, 38),
            (60, 39),
            (60, 40),
            (60, 41),
            (60, 42),
            (60, 43),
            (60, 44),
            (60, 45),
            (60, 46),
            (60, 47),
            (60, 48),
            (60, 49),
            (60, 50),
            (60, 51),
            (60, 52),
            (60, 53),
            (60, 54),
            (60, 55),
            (60, 56),
            (60, 57),
            (60, 58),
            (60, 59),
            (60, 60),
            (60, 61),
            (61, 36),
            (61, 37),
            (61, 38),
            (61, 39),
            (61, 40),
            (61, 41),
            (61, 42),
            (61, 43),
            (61, 44),
            (61, 45),
            (61, 46),
            (61, 47),
            (61, 48),
            (61, 49),
            (61, 50),
            (61, 51),
            (61, 52),
            (61, 53),
            (61, 54),
            (61, 55),
            (61, 56),
            (61, 57),
            (61, 58),
            (61, 59),
            (61, 60),
            (61, 61),
            (61, 62),
            (61, 63),
            (62, 38),
            (62, 39),
            (62, 40),
            (62, 41),
            (62, 42),
            (62, 43),
            (62, 44),
            (62, 45),
            (62, 46),
            (62, 47),
            (62, 48),
            (62, 49),
            (62, 50),
            (62, 51),
            (62, 52),
            (62, 53),
            (62, 54),
            (62, 55),
            (62, 56),
            (62, 57),
            (62, 58),
            (62, 59),
            (62, 60),
            (62, 61),
            (62, 62),
            (62, 63),
            (62, 64),
            (63, 40),
            (63, 41),
            (63, 42),
            (63, 43),
            (63, 44),
            (63, 45),
            (63, 46),
            (63, 47),
            (63, 48),
            (63, 49),
            (63, 50),
            (63, 51),
            (63, 52),
            (63, 53),
            (63, 54),
            (63, 55),
            (63, 56),
            (63, 57),
            (63, 58),
            (63, 59),
            (63, 60),
            (63, 61),
            (63, 62),
            (63, 63),
            (63, 64),
            (63, 65),
            (63, 66),
            (64, 42),
            (64, 43),
            (64, 44),
            (64, 45),
            (64, 46),
            (64, 47),
            (64, 48),
            (64, 49),
            (64, 50),
            (64, 51),
            (64, 52),
            (64, 53),
            (64, 54),
            (64, 55),
            (64, 56),
            (64, 57),
            (64, 58),
            (64, 59),
            (64, 60),
            (64, 61),
            (64, 62),
            (64, 63),
            (64, 64),
            (64, 65),
            (64, 66),
            (64, 67),
            (64, 68),
            (65, 44),
            (65, 45),
            (65, 46),
            (65, 47),
            (65, 48),
            (65, 49),
            (65, 50),
            (65, 51),
            (65, 52),
            (65, 53),
            (65, 54),
            (65, 55),
            (65, 56),
            (65, 57),
            (65, 58),
            (65, 59),
            (65, 60),
            (65, 61),
            (65, 62),
            (65, 63),
            (65, 64),
            (65, 65),
            (65, 66),
            (65, 67),
            (65, 68),
            (65, 69),
            (66, 47),
            (66, 48),
            (66, 49),
            (66, 50),
            (66, 51),
            (66, 52),
            (66, 53),
            (66, 54),
            (66, 55),
            (66, 56),
            (66, 57),
            (66, 58),
            (66, 59),
            (66, 60),
            (66, 61),
            (66, 62),
            (66, 63),
            (66, 64),
            (66, 65),
            (66, 66),
            (66, 67),
            (66, 68),
            (66, 69),
            (66, 70),
            (66, 71),
            (67, 49),
            (67, 50),
            (67, 51),
            (67, 52),
            (67, 53),
            (67, 54),
            (67, 55),
            (67, 56),
            (67, 57),
            (67, 58),
            (67, 59),
            (67, 60),
            (67, 61),
            (67, 62),
            (67, 63),
            (67, 64),
            (67, 65),
            (67, 66),
            (67, 67),
            (67, 68),
            (67, 69),
            (67, 70),
            (67, 71),
            (67, 72),
            (67, 73),
            (68, 51),
            (68, 52),
            (68, 53),
            (68, 54),
            (68, 55),
            (68, 56),
            (68, 57),
            (68, 58),
            (68, 59),
            (68, 60),
            (68, 61),
            (68, 62),
            (68, 63),
            (68, 64),
            (68, 65),
            (68, 66),
            (68, 67),
            (68, 68),
            (68, 69),
            (68, 70),
            (68, 71),
            (68, 72),
            (68, 73),
            (68, 74),
            (69, 53),
            (69, 54),
            (69, 55),
            (69, 56),
            (69, 57),
            (69, 58),
            (69, 59),
            (69, 60),
            (69, 61),
            (69, 62),
            (69, 63),
            (69, 64),
            (69, 65),
            (69, 66),
            (69, 67),
            (69, 68),
            (69, 69),
            (69, 70),
            (69, 71),
            (69, 72),
            (69, 73),
            (69, 74),
            (69, 75),
            (69, 76),
            (70, 55),
            (70, 56),
            (70, 57),
            (70, 58),
            (70, 59),
            (70, 60),
            (70, 61),
            (70, 62),
            (70, 63),
            (70, 64),
            (70, 65),
            (70, 66),
            (70, 67),
            (70, 68),
            (70, 69),
            (70, 70),
            (70, 71),
            (70, 72),
            (70, 73),
            (70, 74),
            (70, 75),
            (70, 76),
            (70, 77),
            (70, 78),
            (71, 57),
            (71, 58),
            (71, 59),
            (71, 60),
            (71, 61),
            (71, 62),
            (71, 63),
            (71, 64),
            (71, 65),
            (71, 66),
            (71, 67),
            (71, 68),
            (71, 69),
            (71, 70),
            (71, 71),
            (71, 72),
            (71, 73),
            (71, 74),
            (71, 75),
            (71, 76),
            (71, 77),
            (71, 78),
            (71, 79),
            (72, 59),
            (72, 60),
            (72, 61),
            (72, 62),
            (72, 63),
            (72, 64),
            (72, 65),
            (72, 66),
            (72, 67),
            (72, 68),
            (72, 69),
            (72, 70),
            (72, 71),
            (72, 72),
            (72, 73),
            (72, 74),
            (72, 75),
            (72, 76),
            (72, 77),
            (72, 78),
            (72, 79),
            (73, 61),
            (73, 62),
            (73, 63),
            (73, 64),
            (73, 65),
            (73, 66),
            (73, 67),
            (73, 68),
            (73, 69),
            (73, 70),
            (73, 71),
            (73, 72),
            (73, 73),
            (73, 74),
            (73, 75),
            (73, 76),
            (73, 77),
            (73, 78),
            (73, 79),
            (74, 63),
            (74, 64),
            (74, 65),
            (74, 66),
            (74, 67),
            (74, 68),
            (74, 69),
            (74, 70),
            (74, 71),
            (74, 72),
            (74, 73),
            (74, 74),
            (74, 75),
            (74, 76),
            (74, 77),
            (74, 78),
            (74, 79),
            (75, 65),
            (75, 66),
            (75, 67),
            (75, 68),
            (75, 69),
            (75, 70),
            (75, 71),
            (75, 72),
            (75, 73),
            (75, 74),
            (75, 75),
            (75, 76),
            (75, 77),
            (75, 78),
            (75, 79),
            (76, 68),
            (76, 69),
            (76, 70),
            (76, 71),
            (76, 72),
            (76, 73),
            (76, 74),
            (76, 75),
            (76, 76),
            (76, 77),
            (76, 78),
            (76, 79),
            (77, 70),
            (77, 71),
            (77, 72),
            (77, 73),
            (77, 74),
            (77, 75),
            (77, 76),
            (77, 77),
            (77, 78),
            (77, 79),
            (78, 72),
            (78, 73),
            (78, 74),
            (78, 75),
            (78, 76),
            (78, 77),
            (78, 78),
            (78, 79),
            (79, 74),
            (79, 75),
            (79, 76),
            (79, 77),
            (79, 78),
            (79, 79),
        }:
            return 37
        return 44

    num_mlp_0_3_outputs = [
        num_mlp_0_3(k0, k1)
        for k0, k1 in zip(num_attn_0_1_outputs, num_attn_0_2_outputs)
    ]
    num_mlp_0_3_output_scores = classifier_weights.loc[
        [("num_mlp_0_3_outputs", str(v)) for v in num_mlp_0_3_outputs]
    ]

    # attn_1_0 ####################################################
    def predicate_1_0(mlp_0_0_output, position):
        if mlp_0_0_output in {0, 3}:
            return position == 1
        elif mlp_0_0_output in {1, 69, 49}:
            return position == 8
        elif mlp_0_0_output in {2}:
            return position == 3
        elif mlp_0_0_output in {
            4,
            7,
            8,
            10,
            12,
            14,
            16,
            18,
            20,
            21,
            22,
            23,
            24,
            27,
            28,
            32,
            33,
            34,
            35,
            36,
            37,
            47,
            51,
            58,
            74,
        }:
            return position == 7
        elif mlp_0_0_output in {5}:
            return position == 4
        elif mlp_0_0_output in {6}:
            return position == 22
        elif mlp_0_0_output in {9}:
            return position == 25
        elif mlp_0_0_output in {
            11,
            13,
            15,
            17,
            19,
            25,
            26,
            29,
            30,
            31,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            46,
            48,
            52,
            53,
            55,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            72,
            73,
            77,
            78,
            79,
        }:
            return position == 6
        elif mlp_0_0_output in {45}:
            return position == 31
        elif mlp_0_0_output in {50}:
            return position == 26
        elif mlp_0_0_output in {75, 54}:
            return position == 2
        elif mlp_0_0_output in {56}:
            return position == 21
        elif mlp_0_0_output in {57}:
            return position == 28
        elif mlp_0_0_output in {70}:
            return position == 30
        elif mlp_0_0_output in {71}:
            return position == 35
        elif mlp_0_0_output in {76}:
            return position == 27

    attn_1_0_pattern = select_closest(positions, mlp_0_0_outputs, predicate_1_0)
    attn_1_0_outputs = aggregate(attn_1_0_pattern, mlp_0_3_outputs)
    attn_1_0_output_scores = classifier_weights.loc[
        [("attn_1_0_outputs", str(v)) for v in attn_1_0_outputs]
    ]

    # attn_1_1 ####################################################
    def predicate_1_1(token, position):
        if token in {"(", "{"}:
            return position == 4
        elif token in {")", "<s>"}:
            return position == 6
        elif token in {"}"}:
            return position == 7

    attn_1_1_pattern = select_closest(positions, tokens, predicate_1_1)
    attn_1_1_outputs = aggregate(attn_1_1_pattern, attn_0_2_outputs)
    attn_1_1_output_scores = classifier_weights.loc[
        [("attn_1_1_outputs", str(v)) for v in attn_1_1_outputs]
    ]

    # attn_1_2 ####################################################
    def predicate_1_2(token, position):
        if token in {"(", "{"}:
            return position == 6
        elif token in {"}", ")"}:
            return position == 5
        elif token in {"<s>"}:
            return position == 8

    attn_1_2_pattern = select_closest(positions, tokens, predicate_1_2)
    attn_1_2_outputs = aggregate(attn_1_2_pattern, attn_0_0_outputs)
    attn_1_2_output_scores = classifier_weights.loc[
        [("attn_1_2_outputs", str(v)) for v in attn_1_2_outputs]
    ]

    # attn_1_3 ####################################################
    def predicate_1_3(attn_0_2_output, mlp_0_3_output):
        if attn_0_2_output in {"(", "}", ")"}:
            return mlp_0_3_output == 5
        elif attn_0_2_output in {"{", "<s>"}:
            return mlp_0_3_output == 7

    attn_1_3_pattern = select_closest(mlp_0_3_outputs, attn_0_2_outputs, predicate_1_3)
    attn_1_3_outputs = aggregate(attn_1_3_pattern, mlp_0_3_outputs)
    attn_1_3_output_scores = classifier_weights.loc[
        [("attn_1_3_outputs", str(v)) for v in attn_1_3_outputs]
    ]

    # num_attn_1_0 ####################################################
    def num_predicate_1_0(position, mlp_0_3_output):
        if position in {0, 64, 77, 22, 24, 26, 61}:
            return mlp_0_3_output == 52
        elif position in {1, 20}:
            return mlp_0_3_output == 75
        elif position in {2}:
            return mlp_0_3_output == 36
        elif position in {3}:
            return mlp_0_3_output == 8
        elif position in {4}:
            return mlp_0_3_output == 48
        elif position in {5}:
            return mlp_0_3_output == 12
        elif position in {68, 6, 7, 70, 9, 16, 56, 57, 29}:
            return mlp_0_3_output == 30
        elif position in {8, 25, 21, 49}:
            return mlp_0_3_output == 38
        elif position in {10, 11, 36}:
            return mlp_0_3_output == 34
        elif position in {12, 23}:
            return mlp_0_3_output == 29
        elif position in {13}:
            return mlp_0_3_output == 69
        elif position in {14}:
            return mlp_0_3_output == 61
        elif position in {75, 60, 30, 15}:
            return mlp_0_3_output == 1
        elif position in {17, 19}:
            return mlp_0_3_output == 74
        elif position in {18, 59, 50}:
            return mlp_0_3_output == 68
        elif position in {27}:
            return mlp_0_3_output == 6
        elif position in {72, 28}:
            return mlp_0_3_output == 45
        elif position in {37, 31}:
            return mlp_0_3_output == 53
        elif position in {32}:
            return mlp_0_3_output == 18
        elif position in {33, 51}:
            return mlp_0_3_output == 9
        elif position in {34, 74}:
            return mlp_0_3_output == 63
        elif position in {35}:
            return mlp_0_3_output == 72
        elif position in {46, 38}:
            return mlp_0_3_output == 66
        elif position in {39}:
            return mlp_0_3_output == 70
        elif position in {40}:
            return mlp_0_3_output == 20
        elif position in {41}:
            return mlp_0_3_output == 42
        elif position in {42}:
            return mlp_0_3_output == 76
        elif position in {43, 52, 63}:
            return mlp_0_3_output == 16
        elif position in {44}:
            return mlp_0_3_output == 11
        elif position in {45, 47}:
            return mlp_0_3_output == 47
        elif position in {48, 71}:
            return mlp_0_3_output == 27
        elif position in {53}:
            return mlp_0_3_output == 15
        elif position in {54}:
            return mlp_0_3_output == 39
        elif position in {55}:
            return mlp_0_3_output == 54
        elif position in {73, 58, 79}:
            return mlp_0_3_output == 19
        elif position in {62}:
            return mlp_0_3_output == 26
        elif position in {65}:
            return mlp_0_3_output == 64
        elif position in {66}:
            return mlp_0_3_output == 17
        elif position in {67}:
            return mlp_0_3_output == 51
        elif position in {69}:
            return mlp_0_3_output == 58
        elif position in {76}:
            return mlp_0_3_output == 71
        elif position in {78}:
            return mlp_0_3_output == 73

    num_attn_1_0_pattern = select(mlp_0_3_outputs, positions, num_predicate_1_0)
    num_attn_1_0_outputs = aggregate_sum(num_attn_1_0_pattern, num_attn_0_0_outputs)
    num_attn_1_0_output_scores = classifier_weights.loc[
        [("num_attn_1_0_outputs", "_") for v in num_attn_1_0_outputs]
    ].mul(num_attn_1_0_outputs, axis=0)

    # num_attn_1_1 ####################################################
    def num_predicate_1_1(attn_0_0_output, mlp_0_3_output):
        if attn_0_0_output in {"(", "}"}:
            return mlp_0_3_output == 57
        elif attn_0_0_output in {"{", ")", "<s>"}:
            return mlp_0_3_output == 42

    num_attn_1_1_pattern = select(mlp_0_3_outputs, attn_0_0_outputs, num_predicate_1_1)
    num_attn_1_1_outputs = aggregate_sum(num_attn_1_1_pattern, num_attn_0_3_outputs)
    num_attn_1_1_output_scores = classifier_weights.loc[
        [("num_attn_1_1_outputs", "_") for v in num_attn_1_1_outputs]
    ].mul(num_attn_1_1_outputs, axis=0)

    # num_attn_1_2 ####################################################
    def num_predicate_1_2(attn_0_3_output, mlp_0_3_output):
        if attn_0_3_output in {"("}:
            return mlp_0_3_output == 9
        elif attn_0_3_output in {"}", ")"}:
            return mlp_0_3_output == 30
        elif attn_0_3_output in {"<s>"}:
            return mlp_0_3_output == 12
        elif attn_0_3_output in {"{"}:
            return mlp_0_3_output == 36

    num_attn_1_2_pattern = select(mlp_0_3_outputs, attn_0_3_outputs, num_predicate_1_2)
    num_attn_1_2_outputs = aggregate_sum(num_attn_1_2_pattern, num_attn_0_2_outputs)
    num_attn_1_2_output_scores = classifier_weights.loc[
        [("num_attn_1_2_outputs", "_") for v in num_attn_1_2_outputs]
    ].mul(num_attn_1_2_outputs, axis=0)

    # num_attn_1_3 ####################################################
    def num_predicate_1_3(attn_0_2_output, mlp_0_3_output):
        if attn_0_2_output in {"("}:
            return mlp_0_3_output == 38
        elif attn_0_2_output in {"{", "}", ")", "<s>"}:
            return mlp_0_3_output == 15

    num_attn_1_3_pattern = select(mlp_0_3_outputs, attn_0_2_outputs, num_predicate_1_3)
    num_attn_1_3_outputs = aggregate_sum(num_attn_1_3_pattern, num_attn_0_3_outputs)
    num_attn_1_3_output_scores = classifier_weights.loc[
        [("num_attn_1_3_outputs", "_") for v in num_attn_1_3_outputs]
    ].mul(num_attn_1_3_outputs, axis=0)

    # mlp_1_0 #####################################################
    def mlp_1_0(token, position):
        key = (token, position)
        if key in {
            ("(", 0),
            ("(", 5),
            ("(", 10),
            ("(", 11),
            ("(", 16),
            ("(", 18),
            ("(", 19),
            ("(", 20),
            ("(", 22),
            ("(", 23),
            ("(", 24),
            ("(", 25),
            ("(", 27),
            ("(", 28),
            ("(", 30),
            ("(", 31),
            ("(", 35),
            ("(", 37),
            ("(", 38),
            ("(", 40),
            ("(", 41),
            ("(", 42),
            ("(", 43),
            ("(", 44),
            ("(", 45),
            ("(", 46),
            ("(", 47),
            ("(", 48),
            ("(", 49),
            ("(", 50),
            ("(", 51),
            ("(", 52),
            ("(", 53),
            ("(", 54),
            ("(", 55),
            ("(", 56),
            ("(", 57),
            ("(", 58),
            ("(", 59),
            ("(", 60),
            ("(", 61),
            ("(", 62),
            ("(", 63),
            ("(", 64),
            ("(", 65),
            ("(", 66),
            ("(", 67),
            ("(", 68),
            ("(", 69),
            ("(", 70),
            ("(", 71),
            ("(", 72),
            ("(", 73),
            ("(", 74),
            ("(", 75),
            ("(", 76),
            ("(", 77),
            ("(", 78),
            ("(", 79),
            (")", 10),
            (")", 11),
            (")", 16),
            (")", 18),
            (")", 19),
            (")", 22),
            (")", 23),
            (")", 24),
            (")", 25),
            (")", 27),
            (")", 29),
            (")", 31),
            (")", 35),
            (")", 37),
            (")", 52),
            (")", 69),
            ("<s>", 10),
            ("<s>", 11),
            ("<s>", 16),
            ("<s>", 18),
            ("<s>", 19),
            ("<s>", 22),
            ("<s>", 23),
            ("<s>", 24),
            ("<s>", 25),
            ("<s>", 27),
            ("<s>", 31),
            ("<s>", 35),
            ("<s>", 37),
            ("{", 0),
            ("{", 5),
            ("{", 10),
            ("{", 11),
            ("{", 16),
            ("{", 18),
            ("{", 19),
            ("{", 22),
            ("{", 23),
            ("{", 24),
            ("{", 25),
            ("{", 27),
            ("{", 28),
            ("{", 31),
            ("{", 35),
            ("{", 37),
            ("{", 38),
            ("{", 40),
            ("{", 41),
            ("{", 42),
            ("{", 43),
            ("{", 44),
            ("{", 45),
            ("{", 46),
            ("{", 47),
            ("{", 48),
            ("{", 49),
            ("{", 50),
            ("{", 51),
            ("{", 52),
            ("{", 53),
            ("{", 54),
            ("{", 55),
            ("{", 56),
            ("{", 57),
            ("{", 58),
            ("{", 59),
            ("{", 60),
            ("{", 61),
            ("{", 62),
            ("{", 63),
            ("{", 64),
            ("{", 65),
            ("{", 66),
            ("{", 67),
            ("{", 68),
            ("{", 69),
            ("{", 70),
            ("{", 71),
            ("{", 72),
            ("{", 73),
            ("{", 74),
            ("{", 75),
            ("{", 76),
            ("{", 77),
            ("{", 78),
            ("{", 79),
            ("}", 10),
            ("}", 11),
            ("}", 16),
            ("}", 18),
            ("}", 19),
            ("}", 22),
            ("}", 23),
            ("}", 24),
            ("}", 25),
            ("}", 27),
            ("}", 31),
            ("}", 35),
            ("}", 37),
            ("}", 52),
        }:
            return 18
        elif key in {
            ("(", 2),
            ("(", 6),
            ("(", 8),
            ("(", 12),
            ("(", 13),
            ("(", 14),
            ("(", 15),
            ("(", 17),
            ("(", 21),
            ("(", 32),
            ("(", 33),
            ("(", 34),
            ("(", 36),
            ("(", 39),
            (")", 12),
            (")", 13),
            (")", 14),
            (")", 15),
            (")", 17),
            (")", 21),
            (")", 32),
            (")", 33),
            ("<s>", 12),
            ("<s>", 13),
            ("<s>", 14),
            ("<s>", 15),
            ("<s>", 17),
            ("<s>", 21),
            ("<s>", 32),
            ("<s>", 33),
            ("{", 2),
            ("{", 6),
            ("{", 12),
            ("{", 13),
            ("{", 14),
            ("{", 15),
            ("{", 17),
            ("{", 21),
            ("{", 32),
            ("{", 33),
            ("{", 34),
            ("{", 36),
            ("{", 39),
            ("}", 12),
            ("}", 14),
            ("}", 15),
            ("}", 17),
            ("}", 32),
            ("}", 33),
        }:
            return 4
        elif key in {
            (")", 5),
            (")", 38),
            (")", 42),
            (")", 57),
            (")", 66),
            ("<s>", 5),
            ("<s>", 38),
            ("<s>", 57),
            ("}", 5),
            ("}", 38),
            ("}", 42),
            ("}", 57),
            ("}", 61),
            ("}", 66),
        }:
            return 2
        elif key in {
            (")", 34),
            (")", 36),
            (")", 39),
            ("<s>", 34),
            ("<s>", 36),
            ("<s>", 39),
            ("}", 34),
            ("}", 36),
            ("}", 39),
        }:
            return 7
        elif key in {
            ("(", 1),
            (")", 8),
            (")", 26),
            ("<s>", 8),
            ("<s>", 26),
            ("{", 1),
            ("{", 8),
            ("}", 8),
            ("}", 13),
            ("}", 26),
        }:
            return 6
        elif key in {
            ("(", 26),
            ("(", 29),
            ("<s>", 29),
            ("{", 26),
            ("{", 29),
            ("}", 29),
        }:
            return 13
        elif key in {(")", 1), (")", 4), ("<s>", 1), ("<s>", 4), ("}", 1), ("}", 4)}:
            return 11
        elif key in {("(", 7), (")", 7), ("<s>", 7), ("{", 7), ("}", 7)}:
            return 61
        elif key in {(")", 2), (")", 3), ("<s>", 2), ("<s>", 3), ("}", 2), ("}", 3)}:
            return 20
        elif key in {("(", 4), ("{", 4)}:
            return 23
        return 39

    mlp_1_0_outputs = [mlp_1_0(k0, k1) for k0, k1 in zip(tokens, positions)]
    mlp_1_0_output_scores = classifier_weights.loc[
        [("mlp_1_0_outputs", str(v)) for v in mlp_1_0_outputs]
    ]

    # mlp_1_1 #####################################################
    def mlp_1_1(attn_1_1_output, attn_1_3_output):
        key = (attn_1_1_output, attn_1_3_output)
        if key in {
            ("(", 57),
            ("(", 72),
            (")", 0),
            (")", 1),
            (")", 2),
            (")", 3),
            (")", 4),
            (")", 5),
            (")", 6),
            (")", 7),
            (")", 8),
            (")", 9),
            (")", 10),
            (")", 11),
            (")", 12),
            (")", 13),
            (")", 14),
            (")", 15),
            (")", 16),
            (")", 17),
            (")", 18),
            (")", 19),
            (")", 20),
            (")", 21),
            (")", 22),
            (")", 23),
            (")", 24),
            (")", 25),
            (")", 26),
            (")", 27),
            (")", 28),
            (")", 29),
            (")", 30),
            (")", 31),
            (")", 32),
            (")", 33),
            (")", 34),
            (")", 35),
            (")", 36),
            (")", 37),
            (")", 39),
            (")", 40),
            (")", 41),
            (")", 42),
            (")", 43),
            (")", 44),
            (")", 45),
            (")", 46),
            (")", 47),
            (")", 48),
            (")", 49),
            (")", 50),
            (")", 51),
            (")", 53),
            (")", 54),
            (")", 55),
            (")", 56),
            (")", 57),
            (")", 58),
            (")", 59),
            (")", 60),
            (")", 61),
            (")", 62),
            (")", 63),
            (")", 64),
            (")", 65),
            (")", 66),
            (")", 67),
            (")", 68),
            (")", 69),
            (")", 70),
            (")", 71),
            (")", 72),
            (")", 73),
            (")", 74),
            (")", 75),
            (")", 76),
            (")", 77),
            (")", 78),
            (")", 79),
            ("<s>", 15),
            ("{", 45),
            ("{", 57),
            ("{", 72),
            ("}", 0),
            ("}", 1),
            ("}", 2),
            ("}", 3),
            ("}", 4),
            ("}", 5),
            ("}", 6),
            ("}", 7),
            ("}", 8),
            ("}", 9),
            ("}", 10),
            ("}", 11),
            ("}", 12),
            ("}", 13),
            ("}", 14),
            ("}", 15),
            ("}", 16),
            ("}", 17),
            ("}", 18),
            ("}", 19),
            ("}", 20),
            ("}", 21),
            ("}", 22),
            ("}", 23),
            ("}", 24),
            ("}", 25),
            ("}", 26),
            ("}", 27),
            ("}", 28),
            ("}", 29),
            ("}", 30),
            ("}", 31),
            ("}", 32),
            ("}", 33),
            ("}", 34),
            ("}", 35),
            ("}", 36),
            ("}", 37),
            ("}", 38),
            ("}", 39),
            ("}", 40),
            ("}", 41),
            ("}", 42),
            ("}", 43),
            ("}", 44),
            ("}", 45),
            ("}", 46),
            ("}", 47),
            ("}", 48),
            ("}", 49),
            ("}", 50),
            ("}", 51),
            ("}", 53),
            ("}", 54),
            ("}", 55),
            ("}", 56),
            ("}", 57),
            ("}", 58),
            ("}", 59),
            ("}", 60),
            ("}", 61),
            ("}", 62),
            ("}", 63),
            ("}", 64),
            ("}", 65),
            ("}", 66),
            ("}", 67),
            ("}", 68),
            ("}", 69),
            ("}", 70),
            ("}", 71),
            ("}", 72),
            ("}", 73),
            ("}", 74),
            ("}", 75),
            ("}", 76),
            ("}", 77),
            ("}", 78),
            ("}", 79),
        }:
            return 32
        elif key in {
            ("(", 45),
            ("(", 52),
            (")", 52),
            ("<s>", 0),
            ("<s>", 1),
            ("<s>", 2),
            ("<s>", 3),
            ("<s>", 4),
            ("<s>", 5),
            ("<s>", 6),
            ("<s>", 7),
            ("<s>", 8),
            ("<s>", 9),
            ("<s>", 10),
            ("<s>", 11),
            ("<s>", 12),
            ("<s>", 13),
            ("<s>", 14),
            ("<s>", 16),
            ("<s>", 17),
            ("<s>", 18),
            ("<s>", 19),
            ("<s>", 20),
            ("<s>", 21),
            ("<s>", 22),
            ("<s>", 23),
            ("<s>", 24),
            ("<s>", 25),
            ("<s>", 26),
            ("<s>", 27),
            ("<s>", 28),
            ("<s>", 29),
            ("<s>", 30),
            ("<s>", 31),
            ("<s>", 32),
            ("<s>", 33),
            ("<s>", 34),
            ("<s>", 35),
            ("<s>", 36),
            ("<s>", 37),
            ("<s>", 38),
            ("<s>", 39),
            ("<s>", 40),
            ("<s>", 41),
            ("<s>", 42),
            ("<s>", 43),
            ("<s>", 44),
            ("<s>", 45),
            ("<s>", 46),
            ("<s>", 47),
            ("<s>", 48),
            ("<s>", 49),
            ("<s>", 50),
            ("<s>", 51),
            ("<s>", 52),
            ("<s>", 53),
            ("<s>", 54),
            ("<s>", 55),
            ("<s>", 56),
            ("<s>", 57),
            ("<s>", 58),
            ("<s>", 59),
            ("<s>", 60),
            ("<s>", 61),
            ("<s>", 62),
            ("<s>", 63),
            ("<s>", 64),
            ("<s>", 65),
            ("<s>", 66),
            ("<s>", 67),
            ("<s>", 68),
            ("<s>", 70),
            ("<s>", 71),
            ("<s>", 72),
            ("<s>", 73),
            ("<s>", 74),
            ("<s>", 75),
            ("<s>", 76),
            ("<s>", 77),
            ("<s>", 78),
            ("<s>", 79),
            ("{", 52),
        }:
            return 17
        elif key in {(")", 38)}:
            return 59
        elif key in {("(", 30), ("(", 78)}:
            return 56
        elif key in {("(", 49)}:
            return 69
        elif key in {("(", 65)}:
            return 4
        elif key in {("(", 1)}:
            return 44
        return 72

    mlp_1_1_outputs = [
        mlp_1_1(k0, k1) for k0, k1 in zip(attn_1_1_outputs, attn_1_3_outputs)
    ]
    mlp_1_1_output_scores = classifier_weights.loc[
        [("mlp_1_1_outputs", str(v)) for v in mlp_1_1_outputs]
    ]

    # mlp_1_2 #####################################################
    def mlp_1_2(attn_1_2_output, attn_1_1_output):
        key = (attn_1_2_output, attn_1_1_output)
        if key in {
            ("(", "("),
            ("(", ")"),
            ("(", "<s>"),
            ("(", "{"),
            ("(", "}"),
            (")", "("),
            (")", ")"),
            (")", "<s>"),
            (")", "{"),
            (")", "}"),
            ("}", ")"),
        }:
            return 77
        elif key in {("<s>", ")"), ("{", ")")}:
            return 68
        return 72

    mlp_1_2_outputs = [
        mlp_1_2(k0, k1) for k0, k1 in zip(attn_1_2_outputs, attn_1_1_outputs)
    ]
    mlp_1_2_output_scores = classifier_weights.loc[
        [("mlp_1_2_outputs", str(v)) for v in mlp_1_2_outputs]
    ]

    # mlp_1_3 #####################################################
    def mlp_1_3(attn_0_1_output, attn_0_2_output):
        key = (attn_0_1_output, attn_0_2_output)
        if key in {
            ("<s>", "{"),
            ("<s>", "}"),
            ("{", "<s>"),
            ("{", "{"),
            ("{", "}"),
            ("}", "{"),
            ("}", "}"),
        }:
            return 43
        elif key in {("(", "<s>"), ("(", "}")}:
            return 46
        elif key in {("(", "("), ("(", ")"), ("<s>", "("), ("<s>", ")")}:
            return 50
        elif key in {("<s>", "<s>"), ("}", "<s>")}:
            return 65
        elif key in {(")", ")"), (")", "<s>"), (")", "{"), ("}", ")")}:
            return 73
        return 27

    mlp_1_3_outputs = [
        mlp_1_3(k0, k1) for k0, k1 in zip(attn_0_1_outputs, attn_0_2_outputs)
    ]
    mlp_1_3_output_scores = classifier_weights.loc[
        [("mlp_1_3_outputs", str(v)) for v in mlp_1_3_outputs]
    ]

    # num_mlp_1_0 #################################################
    def num_mlp_1_0(num_attn_1_0_output):
        key = num_attn_1_0_output
        return 70

    num_mlp_1_0_outputs = [num_mlp_1_0(k0) for k0 in num_attn_1_0_outputs]
    num_mlp_1_0_output_scores = classifier_weights.loc[
        [("num_mlp_1_0_outputs", str(v)) for v in num_mlp_1_0_outputs]
    ]

    # num_mlp_1_1 #################################################
    def num_mlp_1_1(num_attn_1_2_output):
        key = num_attn_1_2_output
        return 36

    num_mlp_1_1_outputs = [num_mlp_1_1(k0) for k0 in num_attn_1_2_outputs]
    num_mlp_1_1_output_scores = classifier_weights.loc[
        [("num_mlp_1_1_outputs", str(v)) for v in num_mlp_1_1_outputs]
    ]

    # num_mlp_1_2 #################################################
    def num_mlp_1_2(num_attn_1_3_output, num_attn_1_2_output):
        key = (num_attn_1_3_output, num_attn_1_2_output)
        return 33

    num_mlp_1_2_outputs = [
        num_mlp_1_2(k0, k1)
        for k0, k1 in zip(num_attn_1_3_outputs, num_attn_1_2_outputs)
    ]
    num_mlp_1_2_output_scores = classifier_weights.loc[
        [("num_mlp_1_2_outputs", str(v)) for v in num_mlp_1_2_outputs]
    ]

    # num_mlp_1_3 #################################################
    def num_mlp_1_3(num_attn_1_3_output, num_attn_1_1_output):
        key = (num_attn_1_3_output, num_attn_1_1_output)
        return 77

    num_mlp_1_3_outputs = [
        num_mlp_1_3(k0, k1)
        for k0, k1 in zip(num_attn_1_3_outputs, num_attn_1_1_outputs)
    ]
    num_mlp_1_3_output_scores = classifier_weights.loc[
        [("num_mlp_1_3_outputs", str(v)) for v in num_mlp_1_3_outputs]
    ]

    # attn_2_0 ####################################################
    def predicate_2_0(attn_0_3_output, position):
        if attn_0_3_output in {"(", "{"}:
            return position == 2
        elif attn_0_3_output in {"}", ")"}:
            return position == 13
        elif attn_0_3_output in {"<s>"}:
            return position == 7

    attn_2_0_pattern = select_closest(positions, attn_0_3_outputs, predicate_2_0)
    attn_2_0_outputs = aggregate(attn_2_0_pattern, attn_1_0_outputs)
    attn_2_0_output_scores = classifier_weights.loc[
        [("attn_2_0_outputs", str(v)) for v in attn_2_0_outputs]
    ]

    # attn_2_1 ####################################################
    def predicate_2_1(attn_0_2_output, position):
        if attn_0_2_output in {"(", "{"}:
            return position == 10
        elif attn_0_2_output in {")"}:
            return position == 8
        elif attn_0_2_output in {"<s>"}:
            return position == 2
        elif attn_0_2_output in {"}"}:
            return position == 7

    attn_2_1_pattern = select_closest(positions, attn_0_2_outputs, predicate_2_1)
    attn_2_1_outputs = aggregate(attn_2_1_pattern, attn_1_3_outputs)
    attn_2_1_output_scores = classifier_weights.loc[
        [("attn_2_1_outputs", str(v)) for v in attn_2_1_outputs]
    ]

    # attn_2_2 ####################################################
    def predicate_2_2(q_position, k_position):
        if q_position in {0, 67, 68, 74, 77, 52, 58, 61, 63}:
            return k_position == 9
        elif q_position in {1, 3, 4, 6, 7, 8, 10}:
            return k_position == 1
        elif q_position in {2}:
            return k_position == 13
        elif q_position in {5}:
            return k_position == 12
        elif q_position in {9, 11}:
            return k_position == 2
        elif q_position in {
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            37,
            38,
            51,
        }:
            return k_position == 8
        elif q_position in {42, 36, 60}:
            return k_position == 10
        elif q_position in {64, 39, 41, 45, 78, 57}:
            return k_position == 15
        elif q_position in {40, 54, 48, 46}:
            return k_position == 18
        elif q_position in {43}:
            return k_position == 7
        elif q_position in {44}:
            return k_position == 68
        elif q_position in {72, 49, 47}:
            return k_position == 48
        elif q_position in {70, 71, 76, 50, 53, 62}:
            return k_position == 17
        elif q_position in {69, 55}:
            return k_position == 19
        elif q_position in {56, 73, 79}:
            return k_position == 16
        elif q_position in {59}:
            return k_position == 71
        elif q_position in {65}:
            return k_position == 69
        elif q_position in {66}:
            return k_position == 79
        elif q_position in {75}:
            return k_position == 55

    attn_2_2_pattern = select_closest(positions, positions, predicate_2_2)
    attn_2_2_outputs = aggregate(attn_2_2_pattern, attn_1_0_outputs)
    attn_2_2_output_scores = classifier_weights.loc[
        [("attn_2_2_outputs", str(v)) for v in attn_2_2_outputs]
    ]

    # attn_2_3 ####################################################
    def predicate_2_3(token, position):
        if token in {"(", "}", ")", "{"}:
            return position == 10
        elif token in {"<s>"}:
            return position == 8

    attn_2_3_pattern = select_closest(positions, tokens, predicate_2_3)
    attn_2_3_outputs = aggregate(attn_2_3_pattern, attn_1_2_outputs)
    attn_2_3_output_scores = classifier_weights.loc[
        [("attn_2_3_outputs", str(v)) for v in attn_2_3_outputs]
    ]

    # num_attn_2_0 ####################################################
    def num_predicate_2_0(attn_0_3_output, token):
        if attn_0_3_output in {"{", "}", ")", "<s>", "("}:
            return token == ""

    num_attn_2_0_pattern = select(tokens, attn_0_3_outputs, num_predicate_2_0)
    num_attn_2_0_outputs = aggregate_sum(num_attn_2_0_pattern, num_attn_0_3_outputs)
    num_attn_2_0_output_scores = classifier_weights.loc[
        [("num_attn_2_0_outputs", "_") for v in num_attn_2_0_outputs]
    ].mul(num_attn_2_0_outputs, axis=0)

    # num_attn_2_1 ####################################################
    def num_predicate_2_1(num_mlp_1_0_output, mlp_0_3_output):
        if num_mlp_1_0_output in {
            0,
            1,
            2,
            4,
            5,
            7,
            10,
            11,
            12,
            14,
            15,
            16,
            17,
            19,
            20,
            21,
            22,
            24,
            25,
            26,
            27,
            28,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            68,
            69,
            70,
            71,
            72,
            73,
            75,
            76,
            77,
            78,
            79,
        }:
            return mlp_0_3_output == 52
        elif num_mlp_1_0_output in {8, 3}:
            return mlp_0_3_output == 30
        elif num_mlp_1_0_output in {6}:
            return mlp_0_3_output == 35
        elif num_mlp_1_0_output in {9}:
            return mlp_0_3_output == 47
        elif num_mlp_1_0_output in {13}:
            return mlp_0_3_output == 15
        elif num_mlp_1_0_output in {18}:
            return mlp_0_3_output == 1
        elif num_mlp_1_0_output in {67, 29, 23}:
            return mlp_0_3_output == 38
        elif num_mlp_1_0_output in {38}:
            return mlp_0_3_output == 43
        elif num_mlp_1_0_output in {58}:
            return mlp_0_3_output == 58
        elif num_mlp_1_0_output in {74}:
            return mlp_0_3_output == 42

    num_attn_2_1_pattern = select(
        mlp_0_3_outputs, num_mlp_1_0_outputs, num_predicate_2_1
    )
    num_attn_2_1_outputs = aggregate_sum(num_attn_2_1_pattern, num_attn_0_0_outputs)
    num_attn_2_1_output_scores = classifier_weights.loc[
        [("num_attn_2_1_outputs", "_") for v in num_attn_2_1_outputs]
    ].mul(num_attn_2_1_outputs, axis=0)

    # num_attn_2_2 ####################################################
    def num_predicate_2_2(attn_1_1_output, mlp_0_3_output):
        if attn_1_1_output in {"("}:
            return mlp_0_3_output == 46
        elif attn_1_1_output in {")"}:
            return mlp_0_3_output == 65
        elif attn_1_1_output in {"}", "<s>"}:
            return mlp_0_3_output == 30
        elif attn_1_1_output in {"{"}:
            return mlp_0_3_output == 58

    num_attn_2_2_pattern = select(mlp_0_3_outputs, attn_1_1_outputs, num_predicate_2_2)
    num_attn_2_2_outputs = aggregate_sum(num_attn_2_2_pattern, num_attn_0_3_outputs)
    num_attn_2_2_output_scores = classifier_weights.loc[
        [("num_attn_2_2_outputs", "_") for v in num_attn_2_2_outputs]
    ].mul(num_attn_2_2_outputs, axis=0)

    # num_attn_2_3 ####################################################
    def num_predicate_2_3(attn_1_3_output, attn_1_0_output):
        if attn_1_3_output in {0, 1, 32, 36, 10, 11, 12, 74, 58, 30}:
            return attn_1_0_output == 15
        elif attn_1_3_output in {
            2,
            4,
            5,
            6,
            7,
            15,
            17,
            18,
            20,
            21,
            22,
            24,
            25,
            26,
            27,
            28,
            29,
            40,
            42,
            43,
            44,
            45,
            48,
            50,
            52,
            53,
            56,
            57,
            59,
            60,
            61,
            63,
            64,
            67,
            69,
            70,
            72,
            73,
            75,
            78,
            79,
        }:
            return attn_1_0_output == 5
        elif attn_1_3_output in {
            33,
            66,
            3,
            35,
            37,
            39,
            71,
            76,
            77,
            14,
            47,
            49,
            51,
            54,
            55,
        }:
            return attn_1_0_output == 69
        elif attn_1_3_output in {8, 19, 23}:
            return attn_1_0_output == 42
        elif attn_1_3_output in {34, 68, 9, 46, 16}:
            return attn_1_0_output == 34
        elif attn_1_3_output in {13, 38, 31}:
            return attn_1_0_output == 38
        elif attn_1_3_output in {65, 41}:
            return attn_1_0_output == 2
        elif attn_1_3_output in {62}:
            return attn_1_0_output == 57

    num_attn_2_3_pattern = select(attn_1_0_outputs, attn_1_3_outputs, num_predicate_2_3)
    num_attn_2_3_outputs = aggregate_sum(num_attn_2_3_pattern, num_attn_0_0_outputs)
    num_attn_2_3_output_scores = classifier_weights.loc[
        [("num_attn_2_3_outputs", "_") for v in num_attn_2_3_outputs]
    ].mul(num_attn_2_3_outputs, axis=0)

    # mlp_2_0 #####################################################
    def mlp_2_0(attn_2_0_output, attn_2_2_output):
        key = (attn_2_0_output, attn_2_2_output)
        if key in {
            (0, 30),
            (0, 38),
            (1, 30),
            (1, 38),
            (2, 38),
            (2, 69),
            (3, 30),
            (3, 38),
            (3, 69),
            (4, 14),
            (4, 30),
            (4, 38),
            (4, 69),
            (6, 30),
            (6, 38),
            (7, 30),
            (7, 38),
            (8, 3),
            (8, 4),
            (8, 30),
            (8, 33),
            (8, 35),
            (8, 58),
            (8, 62),
            (9, 0),
            (9, 7),
            (9, 8),
            (9, 9),
            (9, 14),
            (9, 20),
            (9, 23),
            (9, 30),
            (9, 35),
            (9, 38),
            (9, 63),
            (10, 30),
            (10, 38),
            (11, 0),
            (11, 30),
            (11, 38),
            (12, 0),
            (12, 30),
            (12, 38),
            (12, 66),
            (13, 30),
            (13, 38),
            (14, 30),
            (15, 14),
            (15, 37),
            (15, 51),
            (15, 55),
            (15, 69),
            (16, 30),
            (16, 38),
            (17, 30),
            (17, 38),
            (18, 30),
            (18, 38),
            (19, 14),
            (19, 30),
            (19, 38),
            (20, 14),
            (20, 30),
            (20, 38),
            (21, 14),
            (21, 30),
            (21, 37),
            (21, 38),
            (21, 69),
            (22, 30),
            (22, 38),
            (23, 14),
            (23, 30),
            (23, 38),
            (24, 30),
            (24, 38),
            (25, 30),
            (25, 38),
            (26, 30),
            (26, 38),
            (27, 14),
            (27, 30),
            (27, 37),
            (27, 38),
            (28, 30),
            (28, 38),
            (29, 30),
            (29, 38),
            (30, 30),
            (30, 38),
            (31, 30),
            (31, 38),
            (32, 38),
            (33, 14),
            (33, 30),
            (33, 37),
            (33, 38),
            (33, 69),
            (34, 30),
            (34, 38),
            (34, 69),
            (35, 38),
            (36, 38),
            (37, 14),
            (37, 30),
            (37, 38),
            (38, 30),
            (38, 38),
            (38, 69),
            (39, 14),
            (39, 30),
            (39, 38),
            (39, 69),
            (40, 30),
            (40, 38),
            (41, 30),
            (41, 38),
            (42, 30),
            (42, 37),
            (42, 38),
            (42, 69),
            (43, 14),
            (43, 30),
            (43, 38),
            (44, 14),
            (44, 30),
            (44, 38),
            (45, 14),
            (45, 30),
            (45, 37),
            (45, 38),
            (46, 14),
            (46, 30),
            (46, 38),
            (47, 14),
            (47, 30),
            (47, 38),
            (48, 30),
            (48, 38),
            (49, 30),
            (49, 38),
            (50, 14),
            (50, 30),
            (50, 38),
            (51, 14),
            (51, 30),
            (51, 37),
            (51, 38),
            (51, 69),
            (52, 69),
            (53, 30),
            (53, 38),
            (54, 30),
            (54, 38),
            (55, 14),
            (55, 30),
            (55, 37),
            (55, 38),
            (56, 14),
            (56, 30),
            (56, 38),
            (57, 69),
            (58, 30),
            (58, 38),
            (59, 14),
            (59, 30),
            (59, 38),
            (60, 30),
            (60, 38),
            (61, 30),
            (61, 38),
            (62, 30),
            (62, 38),
            (63, 30),
            (63, 38),
            (64, 30),
            (64, 38),
            (65, 30),
            (65, 38),
            (66, 30),
            (66, 38),
            (67, 30),
            (67, 38),
            (68, 14),
            (68, 30),
            (68, 38),
            (69, 38),
            (70, 14),
            (70, 30),
            (70, 38),
            (71, 30),
            (71, 38),
            (72, 38),
            (72, 69),
            (73, 30),
            (73, 38),
            (74, 30),
            (74, 38),
            (75, 30),
            (75, 38),
            (76, 30),
            (76, 38),
            (77, 14),
            (77, 30),
            (77, 38),
            (78, 0),
            (78, 4),
            (78, 6),
            (78, 7),
            (78, 8),
            (78, 9),
            (78, 10),
            (78, 11),
            (78, 12),
            (78, 13),
            (78, 14),
            (78, 16),
            (78, 17),
            (78, 18),
            (78, 19),
            (78, 20),
            (78, 21),
            (78, 22),
            (78, 23),
            (78, 24),
            (78, 25),
            (78, 26),
            (78, 27),
            (78, 28),
            (78, 29),
            (78, 30),
            (78, 31),
            (78, 32),
            (78, 33),
            (78, 34),
            (78, 35),
            (78, 36),
            (78, 37),
            (78, 38),
            (78, 39),
            (78, 40),
            (78, 41),
            (78, 43),
            (78, 44),
            (78, 46),
            (78, 47),
            (78, 48),
            (78, 49),
            (78, 50),
            (78, 51),
            (78, 53),
            (78, 54),
            (78, 55),
            (78, 56),
            (78, 58),
            (78, 59),
            (78, 60),
            (78, 61),
            (78, 62),
            (78, 63),
            (78, 64),
            (78, 65),
            (78, 66),
            (78, 67),
            (78, 68),
            (78, 70),
            (78, 71),
            (78, 73),
            (78, 74),
            (78, 75),
            (78, 76),
            (78, 77),
            (78, 79),
            (79, 14),
            (79, 30),
            (79, 37),
            (79, 38),
            (79, 69),
        }:
            return 30
        elif key in {
            (0, 34),
            (0, 52),
            (1, 4),
            (1, 34),
            (1, 52),
            (1, 63),
            (1, 78),
            (2, 52),
            (3, 34),
            (3, 52),
            (4, 4),
            (4, 34),
            (4, 52),
            (4, 63),
            (5, 52),
            (6, 4),
            (6, 34),
            (6, 52),
            (6, 63),
            (7, 4),
            (7, 34),
            (7, 52),
            (7, 63),
            (7, 78),
            (8, 1),
            (8, 19),
            (8, 52),
            (8, 61),
            (8, 65),
            (8, 66),
            (9, 4),
            (9, 34),
            (9, 52),
            (10, 4),
            (10, 34),
            (10, 52),
            (10, 63),
            (10, 78),
            (11, 3),
            (11, 4),
            (11, 34),
            (11, 52),
            (11, 63),
            (11, 76),
            (12, 3),
            (12, 4),
            (12, 6),
            (12, 7),
            (12, 8),
            (12, 9),
            (12, 11),
            (12, 14),
            (12, 20),
            (12, 21),
            (12, 23),
            (12, 25),
            (12, 29),
            (12, 31),
            (12, 33),
            (12, 34),
            (12, 35),
            (12, 52),
            (12, 62),
            (12, 63),
            (12, 67),
            (12, 76),
            (13, 4),
            (13, 34),
            (13, 52),
            (13, 63),
            (14, 52),
            (15, 0),
            (15, 1),
            (15, 3),
            (15, 4),
            (15, 6),
            (15, 7),
            (15, 8),
            (15, 9),
            (15, 10),
            (15, 11),
            (15, 12),
            (15, 13),
            (15, 16),
            (15, 17),
            (15, 18),
            (15, 19),
            (15, 20),
            (15, 21),
            (15, 22),
            (15, 23),
            (15, 24),
            (15, 25),
            (15, 26),
            (15, 27),
            (15, 28),
            (15, 29),
            (15, 30),
            (15, 31),
            (15, 32),
            (15, 33),
            (15, 34),
            (15, 35),
            (15, 36),
            (15, 38),
            (15, 39),
            (15, 40),
            (15, 41),
            (15, 42),
            (15, 43),
            (15, 44),
            (15, 45),
            (15, 46),
            (15, 47),
            (15, 48),
            (15, 49),
            (15, 50),
            (15, 52),
            (15, 53),
            (15, 54),
            (15, 58),
            (15, 59),
            (15, 60),
            (15, 61),
            (15, 62),
            (15, 63),
            (15, 64),
            (15, 65),
            (15, 66),
            (15, 67),
            (15, 68),
            (15, 71),
            (15, 73),
            (15, 74),
            (15, 76),
            (15, 77),
            (15, 78),
            (16, 34),
            (16, 52),
            (17, 52),
            (18, 34),
            (18, 52),
            (19, 52),
            (20, 34),
            (20, 52),
            (21, 52),
            (22, 34),
            (22, 52),
            (23, 52),
            (24, 34),
            (24, 52),
            (25, 52),
            (26, 34),
            (26, 52),
            (27, 34),
            (27, 52),
            (28, 52),
            (29, 52),
            (30, 34),
            (30, 52),
            (31, 34),
            (31, 52),
            (32, 52),
            (33, 52),
            (34, 52),
            (35, 52),
            (36, 52),
            (37, 52),
            (38, 52),
            (39, 52),
            (40, 52),
            (41, 52),
            (42, 0),
            (42, 3),
            (42, 4),
            (42, 7),
            (42, 20),
            (42, 33),
            (42, 34),
            (42, 52),
            (42, 63),
            (42, 76),
            (43, 34),
            (43, 52),
            (44, 52),
            (45, 52),
            (46, 52),
            (47, 34),
            (47, 52),
            (48, 52),
            (49, 34),
            (49, 52),
            (50, 34),
            (50, 52),
            (51, 52),
            (52, 52),
            (53, 52),
            (54, 52),
            (55, 52),
            (56, 52),
            (58, 52),
            (59, 52),
            (60, 52),
            (61, 34),
            (61, 52),
            (62, 34),
            (62, 52),
            (63, 34),
            (63, 52),
            (64, 34),
            (64, 52),
            (65, 34),
            (65, 52),
            (66, 52),
            (67, 52),
            (68, 34),
            (68, 52),
            (69, 52),
            (70, 52),
            (71, 34),
            (71, 52),
            (72, 52),
            (73, 52),
            (74, 34),
            (74, 52),
            (75, 52),
            (76, 4),
            (76, 34),
            (76, 52),
            (76, 78),
            (77, 52),
            (78, 52),
            (79, 52),
        }:
            return 4
        elif key in {
            (0, 69),
            (1, 69),
            (5, 69),
            (6, 69),
            (7, 69),
            (8, 69),
            (9, 69),
            (10, 69),
            (11, 69),
            (12, 69),
            (13, 69),
            (14, 69),
            (16, 69),
            (17, 69),
            (18, 69),
            (19, 69),
            (20, 69),
            (22, 69),
            (23, 69),
            (24, 69),
            (25, 69),
            (26, 69),
            (27, 69),
            (28, 69),
            (29, 69),
            (30, 69),
            (31, 69),
            (32, 69),
            (35, 69),
            (36, 69),
            (37, 69),
            (40, 69),
            (41, 69),
            (43, 69),
            (44, 69),
            (45, 42),
            (45, 69),
            (46, 69),
            (47, 69),
            (48, 69),
            (49, 69),
            (50, 69),
            (53, 69),
            (54, 69),
            (55, 69),
            (56, 69),
            (58, 69),
            (59, 69),
            (60, 69),
            (61, 69),
            (62, 69),
            (63, 69),
            (64, 69),
            (65, 69),
            (66, 69),
            (67, 69),
            (68, 69),
            (69, 42),
            (69, 69),
            (70, 69),
            (71, 69),
            (73, 69),
            (74, 69),
            (75, 69),
            (76, 42),
            (76, 69),
            (77, 69),
            (78, 42),
            (78, 69),
        }:
            return 40
        elif key in {
            (4, 78),
            (6, 78),
            (8, 0),
            (8, 6),
            (8, 7),
            (8, 8),
            (8, 9),
            (8, 10),
            (8, 11),
            (8, 12),
            (8, 13),
            (8, 14),
            (8, 16),
            (8, 17),
            (8, 18),
            (8, 20),
            (8, 21),
            (8, 22),
            (8, 23),
            (8, 24),
            (8, 25),
            (8, 26),
            (8, 27),
            (8, 28),
            (8, 29),
            (8, 31),
            (8, 32),
            (8, 34),
            (8, 36),
            (8, 37),
            (8, 38),
            (8, 39),
            (8, 40),
            (8, 41),
            (8, 42),
            (8, 43),
            (8, 44),
            (8, 45),
            (8, 46),
            (8, 47),
            (8, 48),
            (8, 49),
            (8, 50),
            (8, 51),
            (8, 53),
            (8, 54),
            (8, 59),
            (8, 60),
            (8, 63),
            (8, 64),
            (8, 67),
            (8, 68),
            (8, 71),
            (8, 73),
            (8, 74),
            (8, 75),
            (8, 76),
            (8, 77),
            (8, 78),
            (9, 78),
            (11, 78),
            (12, 78),
            (13, 78),
            (16, 78),
            (18, 78),
            (20, 78),
            (42, 78),
            (45, 78),
            (78, 78),
        }:
            return 50
        elif key in {(6, 42), (10, 42), (11, 42), (12, 42), (16, 42), (24, 42)}:
            return 26
        elif key in {(34, 34), (45, 34)}:
            return 20
        elif key in {(28, 42)}:
            return 5
        return 17

    mlp_2_0_outputs = [
        mlp_2_0(k0, k1) for k0, k1 in zip(attn_2_0_outputs, attn_2_2_outputs)
    ]
    mlp_2_0_output_scores = classifier_weights.loc[
        [("mlp_2_0_outputs", str(v)) for v in mlp_2_0_outputs]
    ]

    # mlp_2_1 #####################################################
    def mlp_2_1(position, attn_2_0_output):
        key = (position, attn_2_0_output)
        if key in {
            (0, 0),
            (0, 1),
            (0, 6),
            (0, 8),
            (0, 14),
            (0, 52),
            (0, 72),
            (1, 0),
            (1, 1),
            (1, 3),
            (1, 6),
            (1, 7),
            (1, 8),
            (1, 9),
            (1, 10),
            (1, 11),
            (1, 13),
            (1, 14),
            (1, 19),
            (1, 20),
            (1, 24),
            (1, 26),
            (1, 28),
            (1, 29),
            (1, 31),
            (1, 32),
            (1, 35),
            (1, 39),
            (1, 46),
            (1, 47),
            (1, 49),
            (1, 50),
            (1, 52),
            (1, 53),
            (1, 54),
            (1, 59),
            (1, 60),
            (1, 62),
            (1, 64),
            (1, 67),
            (1, 68),
            (1, 71),
            (1, 72),
            (1, 73),
            (1, 74),
            (1, 78),
            (2, 14),
            (2, 52),
            (2, 72),
            (3, 0),
            (3, 1),
            (3, 2),
            (3, 3),
            (3, 4),
            (3, 6),
            (3, 7),
            (3, 8),
            (3, 9),
            (3, 10),
            (3, 11),
            (3, 12),
            (3, 13),
            (3, 14),
            (3, 15),
            (3, 16),
            (3, 17),
            (3, 18),
            (3, 19),
            (3, 20),
            (3, 21),
            (3, 22),
            (3, 23),
            (3, 24),
            (3, 25),
            (3, 26),
            (3, 27),
            (3, 28),
            (3, 29),
            (3, 30),
            (3, 31),
            (3, 32),
            (3, 33),
            (3, 34),
            (3, 35),
            (3, 36),
            (3, 37),
            (3, 38),
            (3, 39),
            (3, 40),
            (3, 41),
            (3, 42),
            (3, 43),
            (3, 44),
            (3, 45),
            (3, 46),
            (3, 47),
            (3, 48),
            (3, 49),
            (3, 50),
            (3, 51),
            (3, 52),
            (3, 53),
            (3, 54),
            (3, 55),
            (3, 56),
            (3, 58),
            (3, 59),
            (3, 60),
            (3, 61),
            (3, 62),
            (3, 63),
            (3, 64),
            (3, 65),
            (3, 66),
            (3, 67),
            (3, 68),
            (3, 69),
            (3, 70),
            (3, 71),
            (3, 72),
            (3, 73),
            (3, 74),
            (3, 75),
            (3, 76),
            (3, 77),
            (3, 78),
            (3, 79),
            (4, 0),
            (4, 1),
            (4, 4),
            (4, 6),
            (4, 7),
            (4, 9),
            (4, 11),
            (4, 12),
            (4, 13),
            (4, 14),
            (4, 16),
            (4, 22),
            (4, 23),
            (4, 24),
            (4, 26),
            (4, 27),
            (4, 28),
            (4, 32),
            (4, 33),
            (4, 35),
            (4, 40),
            (4, 46),
            (4, 47),
            (4, 48),
            (4, 49),
            (4, 50),
            (4, 52),
            (4, 54),
            (4, 55),
            (4, 56),
            (4, 59),
            (4, 60),
            (4, 62),
            (4, 64),
            (4, 65),
            (4, 66),
            (4, 68),
            (4, 70),
            (4, 71),
            (4, 72),
            (4, 73),
            (4, 75),
            (4, 78),
            (6, 72),
            (8, 0),
            (8, 1),
            (8, 2),
            (8, 3),
            (8, 4),
            (8, 6),
            (8, 7),
            (8, 8),
            (8, 9),
            (8, 10),
            (8, 11),
            (8, 12),
            (8, 13),
            (8, 14),
            (8, 15),
            (8, 16),
            (8, 17),
            (8, 18),
            (8, 19),
            (8, 20),
            (8, 22),
            (8, 23),
            (8, 24),
            (8, 25),
            (8, 26),
            (8, 27),
            (8, 28),
            (8, 29),
            (8, 30),
            (8, 31),
            (8, 32),
            (8, 33),
            (8, 35),
            (8, 36),
            (8, 37),
            (8, 38),
            (8, 39),
            (8, 40),
            (8, 41),
            (8, 43),
            (8, 44),
            (8, 45),
            (8, 46),
            (8, 47),
            (8, 48),
            (8, 49),
            (8, 50),
            (8, 51),
            (8, 52),
            (8, 53),
            (8, 54),
            (8, 55),
            (8, 56),
            (8, 58),
            (8, 59),
            (8, 60),
            (8, 61),
            (8, 62),
            (8, 63),
            (8, 64),
            (8, 65),
            (8, 66),
            (8, 67),
            (8, 68),
            (8, 69),
            (8, 70),
            (8, 71),
            (8, 72),
            (8, 73),
            (8, 74),
            (8, 75),
            (8, 76),
            (8, 77),
            (8, 78),
            (8, 79),
            (12, 72),
            (13, 0),
            (13, 1),
            (13, 3),
            (13, 4),
            (13, 6),
            (13, 7),
            (13, 8),
            (13, 9),
            (13, 10),
            (13, 11),
            (13, 12),
            (13, 13),
            (13, 14),
            (13, 16),
            (13, 17),
            (13, 18),
            (13, 19),
            (13, 20),
            (13, 22),
            (13, 23),
            (13, 24),
            (13, 25),
            (13, 26),
            (13, 27),
            (13, 28),
            (13, 29),
            (13, 31),
            (13, 32),
            (13, 33),
            (13, 35),
            (13, 36),
            (13, 37),
            (13, 39),
            (13, 40),
            (13, 41),
            (13, 43),
            (13, 44),
            (13, 45),
            (13, 46),
            (13, 47),
            (13, 48),
            (13, 49),
            (13, 50),
            (13, 51),
            (13, 52),
            (13, 53),
            (13, 54),
            (13, 55),
            (13, 56),
            (13, 58),
            (13, 59),
            (13, 60),
            (13, 61),
            (13, 62),
            (13, 63),
            (13, 64),
            (13, 65),
            (13, 66),
            (13, 67),
            (13, 68),
            (13, 70),
            (13, 71),
            (13, 72),
            (13, 73),
            (13, 74),
            (13, 75),
            (13, 77),
            (13, 78),
            (13, 79),
            (14, 72),
            (15, 0),
            (15, 1),
            (15, 3),
            (15, 6),
            (15, 7),
            (15, 8),
            (15, 9),
            (15, 10),
            (15, 11),
            (15, 14),
            (15, 19),
            (15, 20),
            (15, 24),
            (15, 31),
            (15, 32),
            (15, 35),
            (15, 36),
            (15, 49),
            (15, 52),
            (15, 53),
            (15, 64),
            (15, 67),
            (15, 68),
            (15, 71),
            (15, 72),
            (15, 73),
            (15, 74),
            (15, 78),
            (20, 72),
            (21, 0),
            (21, 1),
            (21, 3),
            (21, 4),
            (21, 6),
            (21, 7),
            (21, 8),
            (21, 9),
            (21, 10),
            (21, 11),
            (21, 12),
            (21, 13),
            (21, 14),
            (21, 16),
            (21, 17),
            (21, 18),
            (21, 19),
            (21, 20),
            (21, 21),
            (21, 22),
            (21, 24),
            (21, 25),
            (21, 26),
            (21, 27),
            (21, 28),
            (21, 29),
            (21, 31),
            (21, 32),
            (21, 33),
            (21, 35),
            (21, 36),
            (21, 37),
            (21, 39),
            (21, 40),
            (21, 41),
            (21, 43),
            (21, 44),
            (21, 45),
            (21, 46),
            (21, 47),
            (21, 48),
            (21, 49),
            (21, 50),
            (21, 51),
            (21, 52),
            (21, 53),
            (21, 54),
            (21, 55),
            (21, 59),
            (21, 60),
            (21, 61),
            (21, 62),
            (21, 63),
            (21, 64),
            (21, 65),
            (21, 66),
            (21, 67),
            (21, 68),
            (21, 69),
            (21, 70),
            (21, 71),
            (21, 72),
            (21, 73),
            (21, 74),
            (21, 75),
            (21, 77),
            (21, 78),
            (22, 0),
            (22, 1),
            (22, 3),
            (22, 4),
            (22, 6),
            (22, 7),
            (22, 8),
            (22, 9),
            (22, 10),
            (22, 11),
            (22, 12),
            (22, 26),
            (22, 31),
            (22, 32),
            (22, 40),
            (22, 52),
            (22, 62),
            (22, 64),
            (22, 68),
            (22, 72),
            (22, 73),
            (25, 72),
            (27, 0),
            (27, 1),
            (27, 3),
            (27, 4),
            (27, 52),
            (27, 72),
            (29, 72),
            (30, 72),
            (31, 72),
            (40, 1),
            (40, 72),
            (41, 72),
            (42, 72),
            (43, 72),
            (44, 1),
            (44, 72),
            (45, 1),
            (45, 72),
            (46, 72),
            (47, 1),
            (47, 72),
            (48, 1),
            (48, 72),
            (49, 1),
            (49, 72),
            (50, 1),
            (50, 72),
            (51, 72),
            (52, 72),
            (53, 1),
            (53, 72),
            (54, 1),
            (54, 72),
            (55, 1),
            (55, 72),
            (56, 1),
            (56, 72),
            (57, 72),
            (58, 1),
            (58, 72),
            (59, 1),
            (59, 72),
            (60, 1),
            (60, 72),
            (61, 72),
            (62, 1),
            (62, 72),
            (63, 72),
            (64, 1),
            (64, 72),
            (65, 72),
            (66, 72),
            (67, 1),
            (67, 72),
            (68, 1),
            (68, 72),
            (69, 72),
            (70, 1),
            (70, 72),
            (71, 1),
            (71, 72),
            (72, 1),
            (72, 72),
            (73, 1),
            (73, 52),
            (73, 72),
            (74, 1),
            (74, 72),
            (75, 1),
            (75, 72),
            (76, 72),
            (77, 1),
            (77, 72),
            (78, 72),
            (79, 72),
        }:
            return 70
        elif key in {
            (0, 4),
            (0, 28),
            (0, 46),
            (0, 60),
            (5, 52),
            (6, 4),
            (6, 52),
            (7, 52),
            (8, 42),
            (10, 0),
            (10, 1),
            (10, 2),
            (10, 3),
            (10, 4),
            (10, 6),
            (10, 7),
            (10, 8),
            (10, 9),
            (10, 10),
            (10, 11),
            (10, 12),
            (10, 13),
            (10, 14),
            (10, 16),
            (10, 17),
            (10, 18),
            (10, 19),
            (10, 20),
            (10, 22),
            (10, 23),
            (10, 24),
            (10, 25),
            (10, 26),
            (10, 27),
            (10, 28),
            (10, 29),
            (10, 31),
            (10, 32),
            (10, 33),
            (10, 35),
            (10, 36),
            (10, 39),
            (10, 40),
            (10, 41),
            (10, 42),
            (10, 43),
            (10, 44),
            (10, 45),
            (10, 46),
            (10, 47),
            (10, 48),
            (10, 49),
            (10, 50),
            (10, 51),
            (10, 52),
            (10, 53),
            (10, 54),
            (10, 55),
            (10, 58),
            (10, 59),
            (10, 60),
            (10, 61),
            (10, 62),
            (10, 63),
            (10, 64),
            (10, 65),
            (10, 66),
            (10, 67),
            (10, 68),
            (10, 69),
            (10, 70),
            (10, 71),
            (10, 73),
            (10, 74),
            (10, 75),
            (10, 76),
            (10, 77),
            (11, 0),
            (11, 1),
            (11, 2),
            (11, 3),
            (11, 4),
            (11, 6),
            (11, 7),
            (11, 8),
            (11, 9),
            (11, 10),
            (11, 11),
            (11, 12),
            (11, 13),
            (11, 14),
            (11, 16),
            (11, 17),
            (11, 18),
            (11, 19),
            (11, 20),
            (11, 22),
            (11, 23),
            (11, 24),
            (11, 25),
            (11, 26),
            (11, 27),
            (11, 28),
            (11, 29),
            (11, 31),
            (11, 32),
            (11, 33),
            (11, 35),
            (11, 36),
            (11, 37),
            (11, 39),
            (11, 40),
            (11, 41),
            (11, 42),
            (11, 43),
            (11, 44),
            (11, 45),
            (11, 46),
            (11, 47),
            (11, 48),
            (11, 49),
            (11, 50),
            (11, 51),
            (11, 52),
            (11, 53),
            (11, 54),
            (11, 55),
            (11, 56),
            (11, 58),
            (11, 59),
            (11, 60),
            (11, 61),
            (11, 62),
            (11, 63),
            (11, 64),
            (11, 65),
            (11, 66),
            (11, 67),
            (11, 68),
            (11, 69),
            (11, 70),
            (11, 71),
            (11, 73),
            (11, 74),
            (11, 75),
            (11, 76),
            (11, 77),
            (11, 78),
            (12, 0),
            (12, 1),
            (12, 3),
            (12, 4),
            (12, 6),
            (12, 7),
            (12, 8),
            (12, 9),
            (12, 10),
            (12, 11),
            (12, 12),
            (12, 13),
            (12, 16),
            (12, 17),
            (12, 18),
            (12, 19),
            (12, 20),
            (12, 22),
            (12, 24),
            (12, 25),
            (12, 26),
            (12, 28),
            (12, 29),
            (12, 31),
            (12, 32),
            (12, 35),
            (12, 39),
            (12, 40),
            (12, 43),
            (12, 44),
            (12, 46),
            (12, 47),
            (12, 48),
            (12, 49),
            (12, 50),
            (12, 52),
            (12, 53),
            (12, 54),
            (12, 59),
            (12, 60),
            (12, 62),
            (12, 63),
            (12, 64),
            (12, 66),
            (12, 67),
            (12, 68),
            (12, 69),
            (12, 70),
            (12, 71),
            (12, 73),
            (12, 74),
            (12, 75),
            (12, 78),
            (13, 42),
            (14, 52),
            (16, 52),
            (17, 52),
            (19, 1),
            (19, 4),
            (19, 12),
            (19, 52),
            (20, 52),
            (23, 1),
            (23, 4),
            (23, 52),
            (24, 52),
            (25, 52),
            (26, 52),
            (28, 52),
            (29, 0),
            (29, 1),
            (29, 3),
            (29, 4),
            (29, 6),
            (29, 7),
            (29, 9),
            (29, 11),
            (29, 13),
            (29, 17),
            (29, 20),
            (29, 22),
            (29, 24),
            (29, 25),
            (29, 26),
            (29, 29),
            (29, 31),
            (29, 32),
            (29, 35),
            (29, 43),
            (29, 44),
            (29, 49),
            (29, 52),
            (29, 53),
            (29, 54),
            (29, 60),
            (29, 64),
            (29, 67),
            (29, 69),
            (29, 70),
            (29, 71),
            (29, 73),
            (29, 74),
            (29, 75),
            (30, 52),
            (31, 52),
            (33, 1),
            (33, 4),
            (33, 20),
            (33, 35),
            (33, 49),
            (33, 52),
            (33, 69),
            (34, 52),
            (35, 52),
            (36, 52),
            (37, 0),
            (37, 1),
            (37, 3),
            (37, 4),
            (37, 6),
            (37, 7),
            (37, 8),
            (37, 9),
            (37, 10),
            (37, 11),
            (37, 13),
            (37, 22),
            (37, 26),
            (37, 31),
            (37, 32),
            (37, 35),
            (37, 39),
            (37, 44),
            (37, 50),
            (37, 52),
            (37, 59),
            (37, 64),
            (37, 67),
            (37, 69),
            (37, 74),
            (38, 52),
            (40, 4),
            (49, 4),
            (50, 4),
            (52, 1),
            (52, 3),
            (52, 4),
            (52, 20),
            (52, 33),
            (52, 35),
            (52, 41),
            (52, 49),
            (52, 52),
            (52, 55),
            (52, 69),
            (52, 79),
            (53, 4),
            (55, 4),
            (60, 4),
            (62, 4),
            (68, 4),
            (69, 52),
            (71, 4),
            (74, 4),
            (75, 4),
            (77, 4),
        }:
            return 24
        elif key in {
            (2, 0),
            (2, 1),
            (2, 2),
            (2, 3),
            (2, 4),
            (2, 5),
            (2, 6),
            (2, 7),
            (2, 8),
            (2, 9),
            (2, 10),
            (2, 11),
            (2, 12),
            (2, 13),
            (2, 15),
            (2, 16),
            (2, 17),
            (2, 18),
            (2, 19),
            (2, 20),
            (2, 21),
            (2, 22),
            (2, 23),
            (2, 24),
            (2, 25),
            (2, 26),
            (2, 27),
            (2, 28),
            (2, 29),
            (2, 30),
            (2, 31),
            (2, 32),
            (2, 33),
            (2, 34),
            (2, 35),
            (2, 36),
            (2, 37),
            (2, 38),
            (2, 39),
            (2, 40),
            (2, 41),
            (2, 42),
            (2, 43),
            (2, 44),
            (2, 45),
            (2, 46),
            (2, 47),
            (2, 48),
            (2, 49),
            (2, 50),
            (2, 51),
            (2, 53),
            (2, 54),
            (2, 55),
            (2, 56),
            (2, 57),
            (2, 58),
            (2, 59),
            (2, 60),
            (2, 61),
            (2, 62),
            (2, 63),
            (2, 64),
            (2, 65),
            (2, 66),
            (2, 67),
            (2, 68),
            (2, 69),
            (2, 70),
            (2, 71),
            (2, 73),
            (2, 74),
            (2, 75),
            (2, 76),
            (2, 77),
            (2, 78),
            (2, 79),
            (3, 5),
            (3, 57),
            (4, 2),
            (4, 3),
            (4, 5),
            (4, 8),
            (4, 10),
            (4, 15),
            (4, 17),
            (4, 18),
            (4, 19),
            (4, 20),
            (4, 21),
            (4, 25),
            (4, 29),
            (4, 30),
            (4, 31),
            (4, 36),
            (4, 37),
            (4, 38),
            (4, 39),
            (4, 41),
            (4, 42),
            (4, 43),
            (4, 44),
            (4, 45),
            (4, 51),
            (4, 53),
            (4, 57),
            (4, 58),
            (4, 61),
            (4, 63),
            (4, 67),
            (4, 69),
            (4, 74),
            (4, 77),
            (4, 79),
            (5, 0),
            (5, 1),
            (5, 2),
            (5, 3),
            (5, 4),
            (5, 5),
            (5, 6),
            (5, 7),
            (5, 8),
            (5, 9),
            (5, 10),
            (5, 11),
            (5, 12),
            (5, 13),
            (5, 14),
            (5, 15),
            (5, 16),
            (5, 17),
            (5, 18),
            (5, 19),
            (5, 20),
            (5, 21),
            (5, 22),
            (5, 23),
            (5, 24),
            (5, 25),
            (5, 26),
            (5, 27),
            (5, 28),
            (5, 29),
            (5, 30),
            (5, 31),
            (5, 32),
            (5, 33),
            (5, 35),
            (5, 36),
            (5, 37),
            (5, 38),
            (5, 39),
            (5, 40),
            (5, 41),
            (5, 42),
            (5, 43),
            (5, 44),
            (5, 45),
            (5, 46),
            (5, 47),
            (5, 48),
            (5, 49),
            (5, 50),
            (5, 51),
            (5, 53),
            (5, 54),
            (5, 55),
            (5, 56),
            (5, 57),
            (5, 58),
            (5, 59),
            (5, 60),
            (5, 61),
            (5, 62),
            (5, 63),
            (5, 64),
            (5, 65),
            (5, 66),
            (5, 67),
            (5, 68),
            (5, 69),
            (5, 70),
            (5, 71),
            (5, 72),
            (5, 73),
            (5, 74),
            (5, 75),
            (5, 76),
            (5, 77),
            (5, 78),
            (5, 79),
            (7, 0),
            (7, 1),
            (7, 2),
            (7, 3),
            (7, 4),
            (7, 5),
            (7, 6),
            (7, 7),
            (7, 8),
            (7, 9),
            (7, 10),
            (7, 11),
            (7, 12),
            (7, 13),
            (7, 14),
            (7, 15),
            (7, 16),
            (7, 17),
            (7, 18),
            (7, 19),
            (7, 20),
            (7, 21),
            (7, 22),
            (7, 23),
            (7, 24),
            (7, 25),
            (7, 26),
            (7, 27),
            (7, 28),
            (7, 29),
            (7, 30),
            (7, 31),
            (7, 32),
            (7, 33),
            (7, 35),
            (7, 36),
            (7, 37),
            (7, 38),
            (7, 39),
            (7, 40),
            (7, 41),
            (7, 42),
            (7, 43),
            (7, 44),
            (7, 45),
            (7, 46),
            (7, 47),
            (7, 48),
            (7, 49),
            (7, 50),
            (7, 51),
            (7, 53),
            (7, 54),
            (7, 55),
            (7, 56),
            (7, 57),
            (7, 58),
            (7, 59),
            (7, 60),
            (7, 61),
            (7, 62),
            (7, 63),
            (7, 64),
            (7, 65),
            (7, 66),
            (7, 67),
            (7, 68),
            (7, 69),
            (7, 70),
            (7, 71),
            (7, 72),
            (7, 73),
            (7, 74),
            (7, 75),
            (7, 76),
            (7, 77),
            (7, 78),
            (7, 79),
            (10, 34),
            (18, 4),
            (19, 21),
            (28, 72),
            (29, 63),
            (35, 72),
        }:
            return 8
        elif key in {
            (0, 57),
            (1, 57),
            (6, 57),
            (8, 57),
            (10, 57),
            (11, 57),
            (12, 57),
            (13, 57),
            (14, 57),
            (15, 12),
            (15, 26),
            (15, 29),
            (15, 57),
            (15, 60),
            (16, 57),
            (17, 57),
            (18, 57),
            (19, 57),
            (20, 57),
            (21, 57),
            (22, 57),
            (23, 0),
            (23, 57),
            (24, 57),
            (25, 57),
            (26, 57),
            (27, 57),
            (28, 57),
            (29, 57),
            (30, 57),
            (31, 57),
            (32, 57),
            (33, 0),
            (33, 6),
            (33, 7),
            (33, 8),
            (33, 9),
            (33, 10),
            (33, 11),
            (33, 12),
            (33, 16),
            (33, 19),
            (33, 24),
            (33, 25),
            (33, 26),
            (33, 28),
            (33, 29),
            (33, 32),
            (33, 36),
            (33, 39),
            (33, 40),
            (33, 44),
            (33, 46),
            (33, 47),
            (33, 48),
            (33, 50),
            (33, 53),
            (33, 55),
            (33, 57),
            (33, 59),
            (33, 64),
            (33, 65),
            (33, 67),
            (33, 68),
            (33, 70),
            (33, 71),
            (33, 73),
            (33, 76),
            (34, 57),
            (35, 57),
            (36, 57),
            (37, 57),
            (38, 57),
            (39, 57),
            (40, 57),
            (41, 57),
            (42, 57),
            (43, 57),
            (44, 57),
            (45, 57),
            (46, 57),
            (47, 57),
            (48, 57),
            (49, 57),
            (50, 57),
            (51, 57),
            (52, 46),
            (52, 57),
            (53, 57),
            (54, 57),
            (55, 57),
            (56, 57),
            (57, 57),
            (58, 57),
            (59, 57),
            (60, 57),
            (61, 57),
            (62, 57),
            (63, 57),
            (64, 57),
            (65, 57),
            (66, 57),
            (67, 57),
            (68, 57),
            (69, 57),
            (70, 57),
            (71, 57),
            (72, 57),
            (73, 57),
            (74, 57),
            (75, 57),
            (76, 57),
            (77, 57),
            (78, 57),
            (79, 57),
        }:
            return 42
        elif key in {
            (1, 21),
            (8, 21),
            (9, 0),
            (9, 1),
            (9, 2),
            (9, 3),
            (9, 4),
            (9, 6),
            (9, 7),
            (9, 8),
            (9, 9),
            (9, 10),
            (9, 11),
            (9, 12),
            (9, 13),
            (9, 14),
            (9, 16),
            (9, 17),
            (9, 18),
            (9, 19),
            (9, 20),
            (9, 21),
            (9, 22),
            (9, 23),
            (9, 24),
            (9, 25),
            (9, 26),
            (9, 27),
            (9, 28),
            (9, 29),
            (9, 31),
            (9, 32),
            (9, 33),
            (9, 34),
            (9, 35),
            (9, 36),
            (9, 37),
            (9, 38),
            (9, 39),
            (9, 40),
            (9, 41),
            (9, 42),
            (9, 43),
            (9, 44),
            (9, 45),
            (9, 46),
            (9, 47),
            (9, 48),
            (9, 49),
            (9, 50),
            (9, 51),
            (9, 52),
            (9, 53),
            (9, 54),
            (9, 55),
            (9, 56),
            (9, 57),
            (9, 58),
            (9, 59),
            (9, 60),
            (9, 61),
            (9, 62),
            (9, 63),
            (9, 64),
            (9, 65),
            (9, 66),
            (9, 67),
            (9, 68),
            (9, 69),
            (9, 70),
            (9, 71),
            (9, 72),
            (9, 73),
            (9, 74),
            (9, 75),
            (9, 76),
            (9, 77),
            (9, 78),
            (9, 79),
            (10, 21),
            (11, 21),
            (12, 21),
            (13, 21),
            (29, 21),
            (52, 21),
        }:
            return 44
        elif key in {
            (0, 5),
            (1, 5),
            (9, 5),
            (10, 5),
            (11, 5),
            (12, 5),
            (13, 5),
            (15, 5),
            (17, 5),
            (18, 5),
            (19, 5),
            (20, 5),
            (21, 5),
            (22, 5),
            (23, 5),
            (24, 5),
            (25, 5),
            (26, 5),
            (27, 5),
            (29, 5),
            (30, 5),
            (31, 5),
            (32, 5),
            (33, 5),
            (34, 5),
            (35, 5),
            (36, 5),
            (37, 5),
            (38, 5),
            (39, 5),
            (40, 5),
            (41, 5),
            (42, 5),
            (43, 5),
            (44, 5),
            (45, 5),
            (46, 5),
            (47, 5),
            (48, 5),
            (49, 5),
            (50, 5),
            (51, 5),
            (52, 5),
            (52, 51),
            (52, 76),
            (53, 5),
            (54, 5),
            (55, 5),
            (56, 5),
            (57, 5),
            (58, 5),
            (59, 5),
            (60, 5),
            (61, 5),
            (62, 5),
            (63, 5),
            (64, 5),
            (65, 5),
            (66, 5),
            (67, 5),
            (68, 5),
            (69, 5),
            (70, 5),
            (71, 5),
            (72, 5),
            (73, 5),
            (74, 5),
            (75, 5),
            (76, 5),
            (77, 5),
            (78, 5),
            (79, 5),
        }:
            return 53
        elif key in {
            (0, 12),
            (12, 14),
            (29, 12),
            (29, 28),
            (29, 46),
            (29, 47),
            (29, 48),
            (29, 62),
            (29, 68),
            (33, 13),
            (33, 17),
            (33, 22),
            (33, 31),
            (33, 42),
            (33, 43),
            (33, 60),
            (33, 74),
            (37, 12),
            (37, 28),
            (37, 46),
            (37, 62),
            (52, 0),
            (52, 2),
            (52, 6),
            (52, 7),
            (52, 8),
            (52, 9),
            (52, 10),
            (52, 11),
            (52, 13),
            (52, 16),
            (52, 17),
            (52, 18),
            (52, 19),
            (52, 22),
            (52, 24),
            (52, 25),
            (52, 26),
            (52, 29),
            (52, 31),
            (52, 32),
            (52, 36),
            (52, 37),
            (52, 39),
            (52, 40),
            (52, 42),
            (52, 43),
            (52, 44),
            (52, 47),
            (52, 50),
            (52, 53),
            (52, 54),
            (52, 59),
            (52, 60),
            (52, 61),
            (52, 63),
            (52, 65),
            (52, 66),
            (52, 67),
            (52, 68),
            (52, 70),
            (52, 71),
            (52, 74),
            (52, 75),
            (52, 78),
        }:
            return 25
        elif key in {
            (1, 4),
            (1, 12),
            (12, 77),
            (13, 2),
            (13, 69),
            (15, 4),
            (29, 8),
            (29, 10),
            (29, 19),
            (29, 39),
            (29, 50),
            (29, 59),
            (33, 3),
            (40, 52),
            (41, 52),
            (42, 52),
            (43, 52),
            (44, 52),
            (45, 52),
            (46, 52),
            (47, 52),
            (48, 52),
            (49, 52),
            (50, 52),
            (51, 52),
            (52, 27),
            (52, 58),
            (52, 64),
            (52, 73),
            (53, 52),
            (54, 52),
            (55, 52),
            (56, 52),
            (57, 52),
            (58, 52),
            (59, 52),
            (60, 52),
            (61, 52),
            (62, 52),
            (63, 52),
            (64, 52),
            (65, 52),
            (66, 52),
            (67, 52),
            (68, 52),
            (70, 52),
            (71, 52),
            (72, 52),
            (74, 52),
            (75, 52),
            (76, 52),
            (77, 52),
            (78, 52),
            (79, 52),
        }:
            return 71
        elif key in {
            (4, 76),
            (12, 2),
            (12, 23),
            (12, 27),
            (12, 33),
            (12, 34),
            (12, 36),
            (12, 37),
            (12, 41),
            (12, 42),
            (12, 45),
            (12, 51),
            (12, 55),
            (12, 56),
            (12, 58),
            (12, 61),
            (12, 65),
            (12, 76),
            (12, 79),
            (13, 76),
            (18, 52),
            (23, 12),
            (23, 28),
            (29, 41),
            (29, 42),
            (29, 55),
            (32, 52),
            (37, 19),
            (37, 29),
            (37, 55),
            (37, 60),
            (39, 52),
            (52, 34),
        }:
            return 73
        elif key in {
            (0, 21),
            (8, 5),
            (14, 5),
            (15, 21),
            (15, 28),
            (15, 39),
            (15, 46),
            (15, 62),
            (15, 77),
            (16, 5),
            (25, 12),
            (25, 21),
            (25, 28),
            (25, 62),
            (28, 5),
            (29, 14),
            (29, 77),
            (33, 14),
            (33, 18),
            (33, 21),
            (33, 54),
            (33, 62),
            (33, 77),
            (52, 12),
            (52, 14),
            (52, 23),
            (52, 28),
            (52, 45),
            (52, 48),
            (52, 56),
            (52, 62),
            (52, 77),
        }:
            return 61
        elif key in {
            (10, 72),
            (11, 34),
            (11, 72),
            (18, 72),
            (19, 72),
            (23, 72),
            (26, 72),
            (33, 72),
            (34, 72),
            (37, 72),
            (38, 72),
            (39, 72),
        }:
            return 75
        elif key in {
            (18, 12),
            (18, 28),
            (18, 46),
            (24, 21),
            (37, 21),
            (38, 21),
            (52, 38),
        }:
            return 9
        return 58

    mlp_2_1_outputs = [mlp_2_1(k0, k1) for k0, k1 in zip(positions, attn_2_0_outputs)]
    mlp_2_1_output_scores = classifier_weights.loc[
        [("mlp_2_1_outputs", str(v)) for v in mlp_2_1_outputs]
    ]

    # mlp_2_2 #####################################################
    def mlp_2_2(attn_2_2_output):
        key = attn_2_2_output
        if key in {4, 15, 42, 52}:
            return 66
        elif key in {38, 69}:
            return 62
        elif key in {34}:
            return 68
        return 41

    mlp_2_2_outputs = [mlp_2_2(k0) for k0 in attn_2_2_outputs]
    mlp_2_2_output_scores = classifier_weights.loc[
        [("mlp_2_2_outputs", str(v)) for v in mlp_2_2_outputs]
    ]

    # mlp_2_3 #####################################################
    def mlp_2_3(attn_2_2_output, attn_2_1_output):
        key = (attn_2_2_output, attn_2_1_output)
        if key in {(21, 37)}:
            return 30
        return 23

    mlp_2_3_outputs = [
        mlp_2_3(k0, k1) for k0, k1 in zip(attn_2_2_outputs, attn_2_1_outputs)
    ]
    mlp_2_3_output_scores = classifier_weights.loc[
        [("mlp_2_3_outputs", str(v)) for v in mlp_2_3_outputs]
    ]

    # num_mlp_2_0 #################################################
    def num_mlp_2_0(num_attn_1_1_output, num_attn_2_2_output):
        key = (num_attn_1_1_output, num_attn_2_2_output)
        return 69

    num_mlp_2_0_outputs = [
        num_mlp_2_0(k0, k1)
        for k0, k1 in zip(num_attn_1_1_outputs, num_attn_2_2_outputs)
    ]
    num_mlp_2_0_output_scores = classifier_weights.loc[
        [("num_mlp_2_0_outputs", str(v)) for v in num_mlp_2_0_outputs]
    ]

    # num_mlp_2_1 #################################################
    def num_mlp_2_1(num_attn_2_2_output, num_attn_1_1_output):
        key = (num_attn_2_2_output, num_attn_1_1_output)
        return 72

    num_mlp_2_1_outputs = [
        num_mlp_2_1(k0, k1)
        for k0, k1 in zip(num_attn_2_2_outputs, num_attn_1_1_outputs)
    ]
    num_mlp_2_1_output_scores = classifier_weights.loc[
        [("num_mlp_2_1_outputs", str(v)) for v in num_mlp_2_1_outputs]
    ]

    # num_mlp_2_2 #################################################
    def num_mlp_2_2(num_attn_1_3_output, num_attn_1_0_output):
        key = (num_attn_1_3_output, num_attn_1_0_output)
        return 30

    num_mlp_2_2_outputs = [
        num_mlp_2_2(k0, k1)
        for k0, k1 in zip(num_attn_1_3_outputs, num_attn_1_0_outputs)
    ]
    num_mlp_2_2_output_scores = classifier_weights.loc[
        [("num_mlp_2_2_outputs", str(v)) for v in num_mlp_2_2_outputs]
    ]

    # num_mlp_2_3 #################################################
    def num_mlp_2_3(num_attn_1_2_output, num_attn_1_1_output):
        key = (num_attn_1_2_output, num_attn_1_1_output)
        return 68

    num_mlp_2_3_outputs = [
        num_mlp_2_3(k0, k1)
        for k0, k1 in zip(num_attn_1_2_outputs, num_attn_1_1_outputs)
    ]
    num_mlp_2_3_output_scores = classifier_weights.loc[
        [("num_mlp_2_3_outputs", str(v)) for v in num_mlp_2_3_outputs]
    ]

    feature_logits = pd.concat(
        [
            df.reset_index()
            for df in [
                token_scores,
                position_scores,
                attn_0_0_output_scores,
                attn_0_1_output_scores,
                attn_0_2_output_scores,
                attn_0_3_output_scores,
                mlp_0_0_output_scores,
                mlp_0_1_output_scores,
                mlp_0_2_output_scores,
                mlp_0_3_output_scores,
                num_mlp_0_0_output_scores,
                num_mlp_0_1_output_scores,
                num_mlp_0_2_output_scores,
                num_mlp_0_3_output_scores,
                attn_1_0_output_scores,
                attn_1_1_output_scores,
                attn_1_2_output_scores,
                attn_1_3_output_scores,
                mlp_1_0_output_scores,
                mlp_1_1_output_scores,
                mlp_1_2_output_scores,
                mlp_1_3_output_scores,
                num_mlp_1_0_output_scores,
                num_mlp_1_1_output_scores,
                num_mlp_1_2_output_scores,
                num_mlp_1_3_output_scores,
                attn_2_0_output_scores,
                attn_2_1_output_scores,
                attn_2_2_output_scores,
                attn_2_3_output_scores,
                mlp_2_0_output_scores,
                mlp_2_1_output_scores,
                mlp_2_2_output_scores,
                mlp_2_3_output_scores,
                num_mlp_2_0_output_scores,
                num_mlp_2_1_output_scores,
                num_mlp_2_2_output_scores,
                num_mlp_2_3_output_scores,
                one_scores,
                num_attn_0_0_output_scores,
                num_attn_0_1_output_scores,
                num_attn_0_2_output_scores,
                num_attn_0_3_output_scores,
                num_attn_1_0_output_scores,
                num_attn_1_1_output_scores,
                num_attn_1_2_output_scores,
                num_attn_1_3_output_scores,
                num_attn_2_0_output_scores,
                num_attn_2_1_output_scores,
                num_attn_2_2_output_scores,
                num_attn_2_3_output_scores,
            ]
        ]
    )
    logits = feature_logits.groupby(level=0).sum(numeric_only=True).to_numpy()
    classes = classifier_weights.columns.to_numpy()
    predictions = classes[logits.argmax(-1)]
    if tokens[0] == "<s>":
        predictions[0] = "<s>"
    if tokens[-1] == "</s>":
        predictions[-1] = "</s>"
    return predictions.tolist()


print(
    run(
        [
            "<s>",
            "}",
            ")",
            "(",
            "}",
            "}",
            "}",
            "}",
            ")",
            "}",
            ")",
            "{",
            "(",
            "}",
            "{",
            "(",
            "(",
            "(",
            "{",
            ")",
            "{",
            "}",
            "}",
            "{",
            "(",
            ")",
            ")",
            ")",
            ")",
            "(",
            ")",
            "(",
            "}",
            "(",
            "}",
            ")",
            "{",
            "}",
            "}",
            "(",
        ]
    )
)
